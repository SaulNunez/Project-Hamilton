{
  "api/Global.ActivateGameplayUI.html": {
    "href": "api/Global.ActivateGameplayUI.html",
    "title": "Class ActivateGameplayUI | A night in the house of Hunt",
    "keywords": "Class ActivateGameplayUI Inheritance Object Mirror.NetworkBehaviour ActivateGameplayUI Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ActivateGameplayUI : NetworkBehaviour Methods OnStartAuthority() Declaration public override void OnStartAuthority() Overrides Mirror.NetworkBehaviour.OnStartAuthority()"
  },
  "api/Global.AnswersForPuzzle.html": {
    "href": "api/Global.AnswersForPuzzle.html",
    "title": "Class AnswersForPuzzle | A night in the house of Hunt",
    "keywords": "Class AnswersForPuzzle Inheritance Object AnswersForPuzzle Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AnswersForPuzzle Fields buttonForSelectingAnswer Declaration public Button buttonForSelectingAnswer Field Value Type Description Button isACorrectAnswer Declaration public bool isACorrectAnswer Field Value Type Description Boolean"
  },
  "api/Global.AvailableCharacters.CharacterInfo.html": {
    "href": "api/Global.AvailableCharacters.CharacterInfo.html",
    "title": "Class AvailableCharacters.CharacterInfo | A night in the house of Hunt",
    "keywords": "Class AvailableCharacters.CharacterInfo Inheritance Object AvailableCharacters.CharacterInfo Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class CharacterInfo Fields characterType Declaration public CharacterTypes characterType Field Value Type Description CharacterTypes playerCharacter Declaration public Sprite playerCharacter Field Value Type Description Sprite"
  },
  "api/Global.AvailableCharacters.html": {
    "href": "api/Global.AvailableCharacters.html",
    "title": "Class AvailableCharacters | A night in the house of Hunt",
    "keywords": "Class AvailableCharacters Inheritance Object AvailableCharacters Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AvailableCharacters : ScriptableObject Fields characters Declaration public List<AvailableCharacters.CharacterInfo> characters Field Value Type Description List < AvailableCharacters.CharacterInfo >"
  },
  "api/Global.AvailableCharactersMemory.CharacterSelection.html": {
    "href": "api/Global.AvailableCharactersMemory.CharacterSelection.html",
    "title": "Struct AvailableCharactersMemory.CharacterSelection | A night in the house of Hunt",
    "keywords": "Struct AvailableCharactersMemory.CharacterSelection Namespace : Global Assembly : cs.temp.dll.dll Syntax public readonly struct CharacterSelection Constructors CharacterSelection(CharacterTypes, String) Declaration public CharacterSelection(CharacterTypes characterSelected, string characterName) Parameters Type Name Description CharacterTypes characterSelected String characterName Fields characterName Declaration public readonly string characterName Field Value Type Description String characterSelected Declaration public readonly CharacterTypes characterSelected Field Value Type Description CharacterTypes"
  },
  "api/Global.AvailableCharactersMemory.html": {
    "href": "api/Global.AvailableCharactersMemory.html",
    "title": "Class AvailableCharactersMemory | A night in the house of Hunt",
    "keywords": "Class AvailableCharactersMemory To be used on lobby to keep track of the character players are using, to only allow players to select a character nobody is using. So players can keep track visually of who is who. Inheritance Object Mirror.NetworkBehaviour AvailableCharactersMemory Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AvailableCharactersMemory : NetworkBehaviour Methods CharacterUsed(CharacterTypes) Declaration public bool CharacterUsed(CharacterTypes selectedCharacter) Parameters Type Name Description CharacterTypes selectedCharacter Returns Type Description Boolean CmdSetPlayerSelection(String, CharacterTypes) Declaration public void CmdSetPlayerSelection(string playerName, CharacterTypes selectedCharacter) Parameters Type Name Description String playerName CharacterTypes selectedCharacter OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() Events OnCharacterAvailable Declaration public static event Action<CharacterTypes> OnCharacterAvailable Event Type Type Description Action < CharacterTypes > OnCharacterOccupied Declaration public static event Action<CharacterTypes> OnCharacterOccupied Event Type Type Description Action < CharacterTypes >"
  },
  "api/Global.BoilerSabotagePlayerStatusSerialization.html": {
    "href": "api/Global.BoilerSabotagePlayerStatusSerialization.html",
    "title": "Class BoilerSabotagePlayerStatusSerialization | A night in the house of Hunt",
    "keywords": "Class BoilerSabotagePlayerStatusSerialization Inheritance Object BoilerSabotagePlayerStatusSerialization Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class BoilerSabotagePlayerStatusSerialization Methods ReadBoilerSabotagePlayerStatusSelection(NetworkReader) Declaration public static SabotageBoilers.PlayerStatus ReadBoilerSabotagePlayerStatusSelection(this NetworkReader reader) Parameters Type Name Description Mirror.NetworkReader reader Returns Type Description SabotageBoilers.PlayerStatus WriteBoilerSabotagePlayerStatusSelection(NetworkWriter, SabotageBoilers.PlayerStatus) Declaration public static void WriteBoilerSabotagePlayerStatusSelection(this NetworkWriter writer, SabotageBoilers.PlayerStatus playerStatus) Parameters Type Name Description Mirror.NetworkWriter writer SabotageBoilers.PlayerStatus playerStatus"
  },
  "api/Global.CameraControl.html": {
    "href": "api/Global.CameraControl.html",
    "title": "Class CameraControl | A night in the house of Hunt",
    "keywords": "Class CameraControl Controls camera position to follow the player or an override target Inheritance Object CameraControl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CameraControl : MonoBehaviour Fields target Player to target, only used to read transform.position Declaration public Transform target Field Value Type Description Transform Methods FollowPlayer() Disables override targeting, making camera follow player Declaration public void FollowPlayer() MoveCameraToTarget(Vector2) Enables override targeting Declaration public void MoveCameraToTarget(Vector2 newTarget) Parameters Type Name Description Vector2 newTarget"
  },
  "api/Global.CameraFollowPlayer.html": {
    "href": "api/Global.CameraFollowPlayer.html",
    "title": "Class CameraFollowPlayer | A night in the house of Hunt",
    "keywords": "Class CameraFollowPlayer Inheritance Object Mirror.NetworkBehaviour CameraFollowPlayer Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CameraFollowPlayer : NetworkBehaviour Methods OnStartAuthority() Declaration public override void OnStartAuthority() Overrides Mirror.NetworkBehaviour.OnStartAuthority()"
  },
  "api/Global.CharacterRadioButton.html": {
    "href": "api/Global.CharacterRadioButton.html",
    "title": "Class CharacterRadioButton | A night in the house of Hunt",
    "keywords": "Class CharacterRadioButton Esto es una clase de ayuda. Para evitar todos los problemas de buscar componentes y tener que conocer como esta implementado el prefab. Esta clase provee facil acceso a todas las cosas que puede buscar los scripts que lo necesiten. Inheritance Object CharacterRadioButton Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CharacterRadioButton : MonoBehaviour Properties CharacterNameText Declaration public Text CharacterNameText { get; } Property Value Type Description Text DescriptionText Declaration public Text DescriptionText { get; } Property Value Type Description Text StatsText Declaration public Text StatsText { get; } Property Value Type Description Text Toggle Declaration public Toggle Toggle { get; } Property Value Type Description Toggle"
  },
  "api/Global.CharacterSelectionSerialization.html": {
    "href": "api/Global.CharacterSelectionSerialization.html",
    "title": "Class CharacterSelectionSerialization | A night in the house of Hunt",
    "keywords": "Class CharacterSelectionSerialization Inheritance Object CharacterSelectionSerialization Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class CharacterSelectionSerialization Methods ReadPCharacterSelection(NetworkReader) Declaration public static AvailableCharactersMemory.CharacterSelection ReadPCharacterSelection(this NetworkReader reader) Parameters Type Name Description Mirror.NetworkReader reader Returns Type Description AvailableCharactersMemory.CharacterSelection WriteCharacterSelection(NetworkWriter, AvailableCharactersMemory.CharacterSelection) Declaration public static void WriteCharacterSelection(this NetworkWriter writer, AvailableCharactersMemory.CharacterSelection characterType) Parameters Type Name Description Mirror.NetworkWriter writer AvailableCharactersMemory.CharacterSelection characterType"
  },
  "api/Global.CharacterTypes.html": {
    "href": "api/Global.CharacterTypes.html",
    "title": "Enum CharacterTypes | A night in the house of Hunt",
    "keywords": "Enum CharacterTypes Available characters in game (for passing around) Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum CharacterTypes Fields Name Description AndreaLewis CyrilGates JohanaOrdonez JohannMacArthur JohnWu JosephLawrence MathewBrown WernerLaffayette"
  },
  "api/Global.CharacterTypesSerialization.html": {
    "href": "api/Global.CharacterTypesSerialization.html",
    "title": "Class CharacterTypesSerialization | A night in the house of Hunt",
    "keywords": "Class CharacterTypesSerialization Inheritance Object CharacterTypesSerialization Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class CharacterTypesSerialization Methods ReadCharacterTypes(NetworkReader) Declaration public static CharacterTypes ReadCharacterTypes(this NetworkReader reader) Parameters Type Name Description Mirror.NetworkReader reader Returns Type Description CharacterTypes WriteCharacterTypes(NetworkWriter, CharacterTypes) Declaration public static void WriteCharacterTypes(this NetworkWriter writer, CharacterTypes characterType) Parameters Type Name Description Mirror.NetworkWriter writer CharacterTypes characterType"
  },
  "api/Global.CompleteBoolPuzzle.html": {
    "href": "api/Global.CompleteBoolPuzzle.html",
    "title": "Class CompleteBoolPuzzle | A night in the house of Hunt",
    "keywords": "Class CompleteBoolPuzzle Used for puzzle regarding booleans. Uses a lever as a way to teach concept of booleans. Inheritance Object Mirror.NetworkBehaviour PuzzleBase CompleteBoolPuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CompleteBoolPuzzle : PuzzleBase Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() TurnsOff() Declaration public void TurnsOff() TurnsOn() Declaration public void TurnsOn()"
  },
  "api/Global.CompletingForPuzzle.html": {
    "href": "api/Global.CompletingForPuzzle.html",
    "title": "Class CompletingForPuzzle | A night in the house of Hunt",
    "keywords": "Class CompletingForPuzzle Inheritance Object Mirror.NetworkBehaviour PuzzleBase CompletingForPuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CompletingForPuzzle : PuzzleBase Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() Verify() Declaration public void Verify()"
  },
  "api/Global.CompletingWhilePuzzle.html": {
    "href": "api/Global.CompletingWhilePuzzle.html",
    "title": "Class CompletingWhilePuzzle | A night in the house of Hunt",
    "keywords": "Class CompletingWhilePuzzle Inheritance Object Mirror.NetworkBehaviour PuzzleBase CompletingWhilePuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CompletingWhilePuzzle : PuzzleBase Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() Verify() Declaration public void Verify()"
  },
  "api/Global.CreateLocalPuzzleUI.html": {
    "href": "api/Global.CreateLocalPuzzleUI.html",
    "title": "Class CreateLocalPuzzleUI | A night in the house of Hunt",
    "keywords": "Class CreateLocalPuzzleUI Inheritance Object Mirror.NetworkBehaviour CreateLocalPuzzleUI Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CreateLocalPuzzleUI : NetworkBehaviour Methods CmdSpawnPuzzleIdOnServer(NetworkConnectionToClient) Declaration public void CmdSpawnPuzzleIdOnServer(NetworkConnectionToClient sender = null) Parameters Type Name Description Mirror.NetworkConnectionToClient sender OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient()"
  },
  "api/Global.DespawnAfterVoting.html": {
    "href": "api/Global.DespawnAfterVoting.html",
    "title": "Class DespawnAfterVoting | A night in the house of Hunt",
    "keywords": "Class DespawnAfterVoting Inheritance Object Mirror.NetworkBehaviour DespawnAfterVoting Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DespawnAfterVoting : NetworkBehaviour Methods OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.DetectDead.html": {
    "href": "api/Global.DetectDead.html",
    "title": "Class DetectDead | A night in the house of Hunt",
    "keywords": "Class DetectDead Inheritance Object Mirror.NetworkBehaviour DetectDead Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DetectDead : NetworkBehaviour Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopClient() Declaration public override void OnStopClient() Overrides Mirror.NetworkBehaviour.OnStopClient()"
  },
  "api/Global.Dialog.html": {
    "href": "api/Global.Dialog.html",
    "title": "Class Dialog | A night in the house of Hunt",
    "keywords": "Class Dialog Inheritance Object Dialog Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Dialog : MonoBehaviour Fields dialogPrefab Declaration public GameObject dialogPrefab Field Value Type Description GameObject Methods Close() Declaration public void Close() OpenDialog(String) Declaration public void OpenDialog(string text) Parameters Type Name Description String text"
  },
  "api/Global.DiceAnimation.html": {
    "href": "api/Global.DiceAnimation.html",
    "title": "Class DiceAnimation | A night in the house of Hunt",
    "keywords": "Class DiceAnimation Inheritance Object DiceAnimation Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DiceAnimation : MonoBehaviour Fields canvas Declaration public GameObject canvas Field Value Type Description GameObject text Declaration public Text text Field Value Type Description Text"
  },
  "api/Global.DiceThrow.html": {
    "href": "api/Global.DiceThrow.html",
    "title": "Class DiceThrow | A night in the house of Hunt",
    "keywords": "Class DiceThrow Inheritance Object DiceThrow Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DiceThrow : MonoBehaviour"
  },
  "api/Global.Die.html": {
    "href": "api/Global.Die.html",
    "title": "Class Die | A night in the house of Hunt",
    "keywords": "Class Die Controls alive status on client and what to do when player dies. Inheritance Object Mirror.NetworkBehaviour Die Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Die : NetworkBehaviour Properties IsDead Declaration public bool IsDead { get; } Property Value Type Description Boolean Methods SetDed() Handles death when killed and a tomb is spawned Declaration public void SetDed() SetSimpleDeath() Handles death when killed by votes Declaration public void SetSimpleDeath()"
  },
  "api/Global.DisableOnLackOfAuthority.html": {
    "href": "api/Global.DisableOnLackOfAuthority.html",
    "title": "Class DisableOnLackOfAuthority | A night in the house of Hunt",
    "keywords": "Class DisableOnLackOfAuthority Inheritance Object Mirror.NetworkBehaviour DisableOnLackOfAuthority Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DisableOnLackOfAuthority : NetworkBehaviour"
  },
  "api/Global.DisableWhenOnEmergency.html": {
    "href": "api/Global.DisableWhenOnEmergency.html",
    "title": "Class DisableWhenOnEmergency | A night in the house of Hunt",
    "keywords": "Class DisableWhenOnEmergency To be used on the emergency button. Sends a RPC call to turn off collisions when emergency has started and turns them back on when the emergency has been solved. Inheritance Object Mirror.NetworkBehaviour DisableWhenOnEmergency Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DisableWhenOnEmergency : NetworkBehaviour Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.DontKillOnSceneChange.html": {
    "href": "api/Global.DontKillOnSceneChange.html",
    "title": "Class DontKillOnSceneChange | A night in the house of Hunt",
    "keywords": "Class DontKillOnSceneChange Utility that can be added to any gameobject that needs to persist scene changes. Inheritance Object DontKillOnSceneChange Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DontKillOnSceneChange : MonoBehaviour"
  },
  "api/Global.DoWhilePuzzle.html": {
    "href": "api/Global.DoWhilePuzzle.html",
    "title": "Class DoWhilePuzzle | A night in the house of Hunt",
    "keywords": "Class DoWhilePuzzle Logic for do while puzzle Inheritance Object Mirror.NetworkBehaviour PuzzleBase DoWhilePuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DoWhilePuzzle : PuzzleBase Methods CheckTextboxInput(String) To be used in the UI in the client to check input in server Declaration public void CheckTextboxInput(string text) Parameters Type Name Description String text InputField current text OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient()"
  },
  "api/Global.EditServerLocation.html": {
    "href": "api/Global.EditServerLocation.html",
    "title": "Class EditServerLocation | A night in the house of Hunt",
    "keywords": "Class EditServerLocation Inheritance Object EditServerLocation Namespace : Global Assembly : cs.temp.dll.dll Syntax public class EditServerLocation : MonoBehaviour"
  },
  "api/Global.ElectricitySabotage.html": {
    "href": "api/Global.ElectricitySabotage.html",
    "title": "Class ElectricitySabotage | A night in the house of Hunt",
    "keywords": "Class ElectricitySabotage Puzzle for electricity sabotage Inheritance Object Mirror.NetworkBehaviour SabotagePuzzle ElectricitySabotage Inherited Members SabotagePuzzle.ui SabotagePuzzle.IsPuzzleEnabled SabotagePuzzle.OnStartServer() SabotagePuzzle.ShowPuzzle() SabotagePuzzle.OnPuzzleActivated() SabotagePuzzle.SetPuzzleAsCompleted(NetworkConnection) SabotagePuzzle.OnPuzzleCompleted() SabotagePuzzle.OnStopServer() SabotagePuzzle.TargetClosePuzzle(NetworkConnection) SabotagePuzzle.CloseAllPuzzle() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ElectricitySabotage : SabotagePuzzle Methods AreEmergencyConditionsEnough(Emergency.EmergencyType) Declaration protected override bool AreEmergencyConditionsEnough(Emergency.EmergencyType type) Parameters Type Name Description Emergency.EmergencyType type Returns Type Description Boolean Overrides SabotagePuzzle.AreEmergencyConditionsEnough(Emergency.EmergencyType) ArePuzzleCompletionConditionsReached() Declaration protected override bool ArePuzzleCompletionConditionsReached() Returns Type Description Boolean Overrides SabotagePuzzle.ArePuzzleCompletionConditionsReached() OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() ResetSabotage(Int32) Declaration protected override void ResetSabotage(int _) Parameters Type Name Description Int32 _ Overrides SabotagePuzzle.ResetSabotage(Int32) SendNewGeneratorValue(Single) To be called by UI on update of value of voltage to be checked if it's the one needed. Declaration public void SendNewGeneratorValue(float value) Parameters Type Name Description Single value Valor actual de UI"
  },
  "api/Global.Emergency.EmergencyType.html": {
    "href": "api/Global.Emergency.EmergencyType.html",
    "title": "Enum Emergency.EmergencyType | A night in the house of Hunt",
    "keywords": "Enum Emergency.EmergencyType Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum EmergencyType Fields Name Description ChangeBoilerPressure None QuestionSabotage TurnDownGenerator"
  },
  "api/Global.Emergency.html": {
    "href": "api/Global.Emergency.html",
    "title": "Class Emergency | A night in the house of Hunt",
    "keywords": "Class Emergency Handles emergency logic, like activating buttons to turn emergency types. Also handles wait to activate, and progress; offers countdown event for clients. Emergencies have three states: Waiting to activate After voting, there's a wait before them being available When a player uses them there's another wait before being available Available (assasins can activate them) In progress, when an assasin used them, players are currently scrambling to solve it. Failure to do so finishes the game with victory to the assasins. Inheritance Object Mirror.NetworkBehaviour Emergency Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Emergency : NetworkBehaviour Fields instance Single instance of the class. Declaration public static Emergency instance Field Value Type Description Emergency Remarks Available on server and client Properties CurrentActiveSabotage Declaration public Emergency.EmergencyType CurrentActiveSabotage { get; } Property Value Type Description Emergency.EmergencyType TimeRemainingEmergency Time available to solve emergency Declaration public int TimeRemainingEmergency { get; } Property Value Type Description Int32 Methods CmdStartEmergency(Emergency.EmergencyType) Declaration public void CmdStartEmergency(Emergency.EmergencyType sabotageType) Parameters Type Name Description Emergency.EmergencyType sabotageType OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer() StartBoilerSabotage() For UI on client, starts emergency sabotaging boiler pressure Declaration public void StartBoilerSabotage() StartElectricitySabotage() For UI on client, starts emergency sabotaging electric generators Declaration public void StartElectricitySabotage() StartTelegraphSabotage() Declaration public void StartTelegraphSabotage() StopEmergency() Declaration public void StopEmergency() Events OnEmergencyResolved Called when an emergency is finished, when solved by several persons. Declaration public static event Action OnEmergencyResolved Event Type Type Description Action Remarks Only available on server. OnEmergencyStarted Called when an emergency is finished, when solved by several persons. Declaration public static event Action<Emergency.EmergencyType> OnEmergencyStarted Event Type Type Description Action < Emergency.EmergencyType > Remarks Only available on server. OnPlayersCouldntStopEmergency Called when the emergency couldn't be stoped, this means players loose. Declaration public static event Action OnPlayersCouldntStopEmergency Event Type Type Description Action Remarks Only available on server OnTimeRemaingForEmergencyChanged Called when time remaining changed. This is the time remaining to solve an emergency, useful for updating UI. Declaration public static event Action<int> OnTimeRemaingForEmergencyChanged Event Type Type Description Action < Int32 > Remarks Only available on server."
  },
  "api/Global.EnumerableExtension.html": {
    "href": "api/Global.EnumerableExtension.html",
    "title": "Class EnumerableExtension | A night in the house of Hunt",
    "keywords": "Class EnumerableExtension Inheritance Object EnumerableExtension Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class EnumerableExtension Methods PickRandom<T>(IEnumerable<T>) Declaration public static T PickRandom<T>(this IEnumerable<T> source) Parameters Type Name Description IEnumerable <T> source Returns Type Description T Type Parameters Name Description T PickRandom<T>(IEnumerable<T>, Int32) Declaration public static IEnumerable<T> PickRandom<T>(this IEnumerable<T> source, int count) Parameters Type Name Description IEnumerable <T> source Int32 count Returns Type Description IEnumerable <T> Type Parameters Name Description T Shuffle<T>(IEnumerable<T>) Declaration public static IEnumerable<T> Shuffle<T>(this IEnumerable<T> source) Parameters Type Name Description IEnumerable <T> source Returns Type Description IEnumerable <T> Type Parameters Name Description T"
  },
  "api/Global.FixActiveStateOnStart.html": {
    "href": "api/Global.FixActiveStateOnStart.html",
    "title": "Class FixActiveStateOnStart | A night in the house of Hunt",
    "keywords": "Class FixActiveStateOnStart Workaround on failing to passing gameobject active property when spawning UI on client. Disables UI to prevent poluding the screen on the user. Inheritance Object Mirror.NetworkBehaviour FixActiveStateOnStart Namespace : Global Assembly : cs.temp.dll.dll Syntax public class FixActiveStateOnStart : NetworkBehaviour Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient()"
  },
  "api/Global.FlowerButtonModel.html": {
    "href": "api/Global.FlowerButtonModel.html",
    "title": "Class FlowerButtonModel | A night in the house of Hunt",
    "keywords": "Class FlowerButtonModel In if flower puzzle, serves as a weak abstraction to separate concerns. Can also prevent change in button structure from breaking code that handles button setup. Button component is served directly, but the sprite is a property that can be modified to acomodate new ways of displaying. Inheritance Object FlowerButtonModel Namespace : Global Assembly : cs.temp.dll.dll Syntax public class FlowerButtonModel : MonoBehaviour Fields button The UI button that represents that flower type Declaration public Button button Field Value Type Description Button Properties ButtonSprite The sprite to use for the flower Declaration public Sprite ButtonSprite { get; set; } Property Value Type Description Sprite"
  },
  "api/Global.FlowerTypes.html": {
    "href": "api/Global.FlowerTypes.html",
    "title": "Class FlowerTypes | A night in the house of Hunt",
    "keywords": "Class FlowerTypes Inheritance Object FlowerTypes Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class FlowerTypes Fields Daisy Declaration public const string Daisy = \"Daisy\" Field Value Type Description String Roses Declaration public const string Roses = \"Roses\" Field Value Type Description String Sunflower Declaration public const string Sunflower = \"Sunflower\" Field Value Type Description String Tulip Declaration public const string Tulip = \"Tulip\" Field Value Type Description String Types Declaration public static readonly List<string> Types Field Value Type Description List < String >"
  },
  "api/Global.ForPuzzle.html": {
    "href": "api/Global.ForPuzzle.html",
    "title": "Class ForPuzzle | A night in the house of Hunt",
    "keywords": "Class ForPuzzle Setup for for puzzle A number is defined on start. On puzzle used, there's a convertion in client to a number and then sent to the server for checking, if correct, it's registered as a done puzzle and closes puzzle for player. Inheritance Object Mirror.NetworkBehaviour PuzzleBase ForPuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ForPuzzle : PuzzleBase Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() Verify() Declaration public void Verify()"
  },
  "api/Global.FunctionCheck.html": {
    "href": "api/Global.FunctionCheck.html",
    "title": "Class FunctionCheck | A night in the house of Hunt",
    "keywords": "Class FunctionCheck Inheritance Object FunctionCheck Namespace : Global Assembly : cs.temp.dll.dll Syntax public class FunctionCheck Fields name Declaration public string name Field Value Type Description String output Declaration public string output Field Value Type Description String parameters Declaration public List<FunctionParameter> parameters Field Value Type Description List < FunctionParameter >"
  },
  "api/Global.FunctionParameter.html": {
    "href": "api/Global.FunctionParameter.html",
    "title": "Class FunctionParameter | A night in the house of Hunt",
    "keywords": "Class FunctionParameter Inheritance Object FunctionParameter Namespace : Global Assembly : cs.temp.dll.dll Syntax public class FunctionParameter Fields numberValue Declaration public int numberValue Field Value Type Description Int32 stringValue Declaration public string stringValue Field Value Type Description String type Declaration public FunctionParameter.ParameterType type Field Value Type Description FunctionParameter.ParameterType Properties Value Declaration public object Value { get; } Property Value Type Description Object"
  },
  "api/Global.FunctionParameter.ParameterType.html": {
    "href": "api/Global.FunctionParameter.ParameterType.html",
    "title": "Enum FunctionParameter.ParameterType | A night in the house of Hunt",
    "keywords": "Enum FunctionParameter.ParameterType Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum ParameterType Fields Name Description NUMBER STRING"
  },
  "api/Global.GameUI.html": {
    "href": "api/Global.GameUI.html",
    "title": "Class GameUI | A night in the house of Hunt",
    "keywords": "Class GameUI Inheritance Object GameUI Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameUI : MonoBehaviour Fields Instance Declaration public static GameUI Instance Field Value Type Description GameUI Properties CanInteractWithGhostingButton Declaration public bool CanInteractWithGhostingButton { get; set; } Property Value Type Description Boolean CanInteractWithKillButton Declaration public bool CanInteractWithKillButton { get; set; } Property Value Type Description Boolean CanInteractWithReportButton Declaration public bool CanInteractWithReportButton { get; set; } Property Value Type Description Boolean EnableAssasinExtras Declaration public bool EnableAssasinExtras { get; set; } Property Value Type Description Boolean InteractionEnabled Declaration public bool InteractionEnabled { get; set; } Property Value Type Description Boolean Events onGeneralClick Declaration public static event Action onGeneralClick Event Type Type Description Action OnGhostingInvoked Invoked when player clicks button to start ghost mode Declaration public static event Action OnGhostingInvoked Event Type Type Description Action onKillButtonClick Declaration public static event Action onKillButtonClick Event Type Type Description Action OnReportClick Declaration public static event Action OnReportClick Event Type Type Description Action"
  },
  "api/Global.Ghosting.html": {
    "href": "api/Global.Ghosting.html",
    "title": "Class Ghosting | A night in the house of Hunt",
    "keywords": "Class Ghosting Inheritance Object Mirror.NetworkBehaviour Ghosting Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Ghosting : NetworkBehaviour Fields ghostingDurationInSeconds Declaration public int ghostingDurationInSeconds Field Value Type Description Int32 Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopClient() Declaration public override void OnStopClient() Overrides Mirror.NetworkBehaviour.OnStopClient() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.HamiltonNetworkPlayer.html": {
    "href": "api/Global.HamiltonNetworkPlayer.html",
    "title": "Class HamiltonNetworkPlayer | A night in the house of Hunt",
    "keywords": "Class HamiltonNetworkPlayer Custom network player, has some player information that persists between sessions. Inheritance Object Mirror.NetworkBehaviour Mirror.NetworkRoomPlayer HamiltonNetworkPlayer Namespace : Global Assembly : cs.temp.dll.dll Syntax public class HamiltonNetworkPlayer : NetworkRoomPlayer Fields characterType Declaration public CharacterTypes characterType Field Value Type Description CharacterTypes isImpostor Declaration public bool isImpostor Field Value Type Description Boolean name Declaration public string name Field Value Type Description String Methods OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() SetCharacter(CharacterTypes) Declaration public void SetCharacter(CharacterTypes characterType) Parameters Type Name Description CharacterTypes characterType SetPlayerName(String) Declaration public void SetPlayerName(string name) Parameters Type Name Description String name"
  },
  "api/Global.HamiltonNetworkRoomManager.html": {
    "href": "api/Global.HamiltonNetworkRoomManager.html",
    "title": "Class HamiltonNetworkRoomManager | A night in the house of Hunt",
    "keywords": "Class HamiltonNetworkRoomManager Extension to the network room manager, handles handling settings done by user from network player to player as well as providing several new events Inheritance Object Mirror.NetworkManager Mirror.NetworkRoomManager HamiltonNetworkRoomManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class HamiltonNetworkRoomManager : NetworkRoomManager Properties UniquenessId Declaration public string UniquenessId { get; } Property Value Type Description String Methods OnRoomClientSceneChanged(NetworkConnection) Declaration public override void OnRoomClientSceneChanged(NetworkConnection conn) Parameters Type Name Description Mirror.NetworkConnection conn Overrides Mirror.NetworkRoomManager.OnRoomClientSceneChanged(Mirror.NetworkConnection) OnRoomServerPlayersReady() In this custom implementation upon all players ready, they are randomly selected to become impostors Declaration public override void OnRoomServerPlayersReady() Overrides Mirror.NetworkRoomManager.OnRoomServerPlayersReady() OnRoomServerSceneLoadedForPlayer(NetworkConnection, GameObject, GameObject) Passing information between room player to game player Declaration public override bool OnRoomServerSceneLoadedForPlayer(NetworkConnection conn, GameObject roomPlayer, GameObject gamePlayer) Parameters Type Name Description Mirror.NetworkConnection conn GameObject roomPlayer GameObject gamePlayer Returns Type Description Boolean Overrides Mirror.NetworkRoomManager.OnRoomServerSceneLoadedForPlayer(Mirror.NetworkConnection, GameObject, GameObject) OnRoomStartClient() Declaration public override void OnRoomStartClient() Overrides Mirror.NetworkRoomManager.OnRoomStartClient() Events OnSceneChanged Called when scene changes to between lobby to game. Should work also if leaving lobby to main screen. Or on end game to main screen. Declaration public event Action OnSceneChanged Event Type Type Description Action"
  },
  "api/Global.HideGuiIfNotEditor.html": {
    "href": "api/Global.HideGuiIfNotEditor.html",
    "title": "Class HideGuiIfNotEditor | A night in the house of Hunt",
    "keywords": "Class HideGuiIfNotEditor Inheritance Object HideGuiIfNotEditor Namespace : Global Assembly : cs.temp.dll.dll Syntax public class HideGuiIfNotEditor : MonoBehaviour"
  },
  "api/Global.Highlight.html": {
    "href": "api/Global.Highlight.html",
    "title": "Class Highlight | A night in the house of Hunt",
    "keywords": "Class Highlight Inheritance Object Highlight Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Highlight : MonoBehaviour"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | A night in the house of Hunt",
    "keywords": "Namespace Global Classes ActivateGameplayUI AnswersForPuzzle AvailableCharacters AvailableCharacters.CharacterInfo AvailableCharactersMemory To be used on lobby to keep track of the character players are using, to only allow players to select a character nobody is using. So players can keep track visually of who is who. BoilerSabotagePlayerStatusSerialization CameraControl Controls camera position to follow the player or an override target CameraFollowPlayer CharacterRadioButton Esto es una clase de ayuda. Para evitar todos los problemas de buscar componentes y tener que conocer como esta implementado el prefab. Esta clase provee facil acceso a todas las cosas que puede buscar los scripts que lo necesiten. CharacterSelectionSerialization CharacterTypesSerialization CompleteBoolPuzzle Used for puzzle regarding booleans. Uses a lever as a way to teach concept of booleans. CompletingForPuzzle CompletingWhilePuzzle CreateLocalPuzzleUI DespawnAfterVoting DetectDead Dialog DiceAnimation DiceThrow Die Controls alive status on client and what to do when player dies. DisableOnLackOfAuthority DisableWhenOnEmergency To be used on the emergency button. Sends a RPC call to turn off collisions when emergency has started and turns them back on when the emergency has been solved. DontKillOnSceneChange Utility that can be added to any gameobject that needs to persist scene changes. DoWhilePuzzle Logic for do while puzzle EditServerLocation ElectricitySabotage Puzzle for electricity sabotage Emergency Handles emergency logic, like activating buttons to turn emergency types. Also handles wait to activate, and progress; offers countdown event for clients. Emergencies have three states: Waiting to activate After voting, there's a wait before them being available When a player uses them there's another wait before being available Available (assasins can activate them) In progress, when an assasin used them, players are currently scrambling to solve it. Failure to do so finishes the game with victory to the assasins. EnumerableExtension FixActiveStateOnStart Workaround on failing to passing gameobject active property when spawning UI on client. Disables UI to prevent poluding the screen on the user. FlowerButtonModel In if flower puzzle, serves as a weak abstraction to separate concerns. Can also prevent change in button structure from breaking code that handles button setup. Button component is served directly, but the sprite is a property that can be modified to acomodate new ways of displaying. FlowerTypes ForPuzzle Setup for for puzzle A number is defined on start. On puzzle used, there's a convertion in client to a number and then sent to the server for checking, if correct, it's registered as a done puzzle and closes puzzle for player. FunctionCheck FunctionParameter GameUI Ghosting HamiltonNetworkPlayer Custom network player, has some player information that persists between sessions. HamiltonNetworkRoomManager Extension to the network room manager, handles handling settings done by user from network player to player as well as providing several new events HideGuiIfNotEditor Highlight HubConfig Keeps information about game lobby parameters IfElsePuzzle IfThermometer ItemUIHandling JoinLobby Killing Attached to player, control player killing and if it can kill another players Layers LobbyOptionsUiConnections Future work, handles updating UI state with hub config in lobby to allow setup LobbyUIHelper Handles activating a canvas on clients with authority. AKA in the client they belong. Messages Shows a quick message to the player NanaBot To be appended to a Nanabot NPC gameobject. Provides an interface to talk back to the user. Has text floating on top of her head. NetworkLayerChecker OpenPuzzle OpenSabotage OpenUrl PlayerControls PlayerName PlayersChat PlayerSelectionBehavior PlayerSelectionInLobby Handles setting a character type for current player, to be connected with lobby UI, before game starts. Can be used anywhere in the hierarchy. PlayerSelectionInLobby.ToggleAndCharacter Tiny container class that matches toggle with a character type PlayersForVoting Sets up player buttons for the voting screen. PlayerSkin PlayerVotingButton Puzzle PuzzleActiveOutline PuzzleBase PuzzleCache PuzzleChecking PuzzleCheckResult PuzzleCompletion Keeps tabs on puzzle completion and handles events PuzzleCompletion.PuzzleCompletionInfo PuzzleCompletionInfoSerialization PuzzleIdSerialization PuzzleInformationSerialization Custom serialization because weaver is ignoring my struct PuzzlesListUi Shows in UI location of not yet solved puzzles and ocurring emergencies. Listens to puzzle completion and emergencies started to update list. PuzzleSoundFeedback PuzzleUI Handles logic of puzzle UI with a simple interface for other code. Handles closing UI when there's voting. Handles opening puzzle. Handles closing puzzle when user presses ESC QuestionPuzzle ReportDeath SabotageBoilers SabotagePuzzle Base for sabotages. Has facilities for puzzles that require multiple players to respond it in a time limit to be marked as done. Opening puzzle is done by the client. Closing will be done automagically from the server, either when sabotage is solved (closing in all clients) or when a player gets it right. SabotageQuestionList SabotageQuestionList.Question SabotageQuestions SequenceConfig SequenceEditor Custom editor to simplify creating a variety of sequence puzzles SequenceGrid Playground for sequence puzzle SequencePuzzle Sequence puzzle config Currently messy, there's no way to make sure on server this has been completed correctly. SequencePuzzleTileModel Model for setup of sequence tiles. This model serves as abstraction between implementation specifics and the idea of a tile containing several layers. SetPortOnWebGl SetResultOnGameEnd In charge of controlling stuff that happens when the games end. Actions: Shows screen for loosers and winners. Results: Programmers win when they vote all assasins Programmers win when they finish all tasks Assasins win when there's the same number of programmers as of them, either by killing or by voting out Assasins win when players don't fix a sabotage on time SetServerUrlToNetworkManagerOnStart Sets the network addresss in network connection to test server when running on the web SetupDefaultFlowers Controls logic for if puzzle. On server a flower type is decided on start. Also a random selection of six flowers is created and send to client to create buttons for user. On click, these send a message on client to check they are the correct type. SetupOnClient ShowPlayerRoleOnStart ShowPuzzleRequest SoundAlarmDuringEmergency For auditory alarm. Starts alarm on emergency start. Ends when resolved or players lost. Events are listened on server and an RPC call controls the AudioSource on the client. SpecialButton SpinUIOnDrag SpriteFlipOnVelocity StartServer Starts server automatically when game is started unnatended (with flag -batchmode) SusbtringPuzzleLogic Tags TaskProgress Updates task progress bar in client Teletransport Acknowledges when player has interacted with teletransport vent, and adds player to teletransport manager to handle on teletransport options and such TeletransportManager Handles teletransport behaviour once a player enters the vent. TeletransportUiConnect Test TriggerEmergencyMeeting UiElements UIGameStart UILobbyConnect UpdateTimeRemaining Updates a given text with the time remaining for voting. For use with the voting screen. UseWSSInHttps VoteAdmin Maneja realizar voto para un unico jugador VotingManager VotingScreenLink To be used from the player Handles opening the voting screen VotingScreenManager WebGLInputTacticalIgnore For WebGL, on complex templates, makes sure inputs are usable in the host web template WhilePuzzle WorldInteraction Structs AvailableCharactersMemory.CharacterSelection PuzzleInformation SabotageBoilers.PlayerStatus Interfaces IInteractuableBehaviour A simple interface to define actions to perform when this object is touched Enums CharacterTypes Available characters in game (for passing around) Emergency.EmergencyType FunctionParameter.ParameterType ItemUIHandling.Motive Puzzle.Class Puzzle.Type PuzzleId SabotageQuestions.QuestionState Used for the state machine of the sabotage questions SetResultOnGameEnd.EndGameResult Teletransport.GoUpOn Delegates WorldInteraction.ObjectEndDetected WorldInteraction.ObjectStartDetected"
  },
  "api/Global.HubConfig.html": {
    "href": "api/Global.HubConfig.html",
    "title": "Class HubConfig | A night in the house of Hunt",
    "keywords": "Class HubConfig Keeps information about game lobby parameters Inheritance Object Mirror.NetworkBehaviour HubConfig Namespace : Global Assembly : cs.temp.dll.dll Syntax public class HubConfig : NetworkBehaviour Fields actDistance Distance for action buttons (killing, activating puzzles, etc.) Declaration public float actDistance Field Value Type Description Single numberOfImpostors How many assasins to have in a game lobby Declaration public int numberOfImpostors Field Value Type Description Int32 secondsEmergencyDuration How much time players have to solve an emergency Declaration public int secondsEmergencyDuration Field Value Type Description Int32 secondsForVoting How much time players have to vote Declaration public int secondsForVoting Field Value Type Description Int32 secondsOfCooldownForSabotage how much time assasins have to wait before the game permits to activate another one Declaration public int secondsOfCooldownForSabotage Field Value Type Description Int32 secondsOfCooldownsForKill Seconds to wait before reactivating the kill button after killing someone Declaration public int secondsOfCooldownsForKill Field Value Type Description Int32"
  },
  "api/Global.IfElsePuzzle.html": {
    "href": "api/Global.IfElsePuzzle.html",
    "title": "Class IfElsePuzzle | A night in the house of Hunt",
    "keywords": "Class IfElsePuzzle Inheritance Object Mirror.NetworkBehaviour PuzzleBase IfElsePuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class IfElsePuzzle : PuzzleBase Methods OnCerezasClick() Declaration public void OnCerezasClick() OnChispitasClick() Declaration public void OnChispitasClick() OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer()"
  },
  "api/Global.IfThermometer.html": {
    "href": "api/Global.IfThermometer.html",
    "title": "Class IfThermometer | A night in the house of Hunt",
    "keywords": "Class IfThermometer Inheritance Object Mirror.NetworkBehaviour PuzzleBase IfThermometer Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class IfThermometer : PuzzleBase Methods CmdVerify(Int32, NetworkConnectionToClient) Declaration public void CmdVerify(int selection, NetworkConnectionToClient sender = null) Parameters Type Name Description Int32 selection Mirror.NetworkConnectionToClient sender OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() SelectedPrint() Declaration public void SelectedPrint() SelectNothing() Declaration public void SelectNothing()"
  },
  "api/Global.IInteractuableBehaviour.html": {
    "href": "api/Global.IInteractuableBehaviour.html",
    "title": "Interface IInteractuableBehaviour | A night in the house of Hunt",
    "keywords": "Interface IInteractuableBehaviour A simple interface to define actions to perform when this object is touched Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IInteractuableBehaviour Methods OnApproach(GameObject) Called when a GameObject interacts with this GameObject, a behaviour can be defined here to what to do when interacted with this object. Declaration void OnApproach(GameObject approachedBy) Parameters Type Name Description GameObject approachedBy GameObject that tries to interact with this GameObject"
  },
  "api/Global.ItemUIHandling.html": {
    "href": "api/Global.ItemUIHandling.html",
    "title": "Class ItemUIHandling | A night in the house of Hunt",
    "keywords": "Class ItemUIHandling Inheritance Object ItemUIHandling Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ItemUIHandling : MonoBehaviour Fields instance Declaration public static ItemUIHandling instance Field Value Type Description ItemUIHandling itemGrid Declaration public GameObject itemGrid Field Value Type Description GameObject itemPrefab Declaration public GameObject itemPrefab Field Value Type Description GameObject"
  },
  "api/Global.ItemUIHandling.Motive.html": {
    "href": "api/Global.ItemUIHandling.Motive.html",
    "title": "Enum ItemUIHandling.Motive | A night in the house of Hunt",
    "keywords": "Enum ItemUIHandling.Motive Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Motive Fields Name Description DICE_THROW_MODIFICATION MOVEMENT_INTERACTION"
  },
  "api/Global.JoinLobby.html": {
    "href": "api/Global.JoinLobby.html",
    "title": "Class JoinLobby | A night in the house of Hunt",
    "keywords": "Class JoinLobby Inheritance Object JoinLobby Namespace : Global Assembly : cs.temp.dll.dll Syntax public class JoinLobby : MonoBehaviour Fields codeInput Declaration public InputField codeInput Field Value Type Description InputField sendToServer Declaration public Button sendToServer Field Value Type Description Button Methods TryToJoinLobby() Declaration public async void TryToJoinLobby()"
  },
  "api/Global.Killing.html": {
    "href": "api/Global.Killing.html",
    "title": "Class Killing | A night in the house of Hunt",
    "keywords": "Class Killing Attached to player, control player killing and if it can kill another players Inheritance Object Mirror.NetworkBehaviour Killing Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Killing : NetworkBehaviour Fields canKillSomeone Is player near someone that can be killed Declaration public bool canKillSomeone Field Value Type Description Boolean Properties IsAssasin Declaration public bool IsAssasin { get; set; } Property Value Type Description Boolean Methods CmdMurder() Kill another player if they are in range Declaration public void CmdMurder() Remarks Called by client, executed in server Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopClient() Declaration public override void OnStopClient() Overrides Mirror.NetworkBehaviour.OnStopClient() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer() Events OnKilledMostPlayers Called on server when there's the same number of programmers as of assasins Declaration public static event Action OnKilledMostPlayers Event Type Type Description Action"
  },
  "api/Global.Layers.html": {
    "href": "api/Global.Layers.html",
    "title": "Class Layers | A night in the house of Hunt",
    "keywords": "Class Layers Inheritance Object Layers Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class Layers Fields FinishedPuzzle Declaration public const string FinishedPuzzle = \"FinishedPuzzle\" Field Value Type Description String Ghost Declaration public const string Ghost = \"Ghost\" Field Value Type Description String Interactuable Declaration public const string Interactuable = \"Interactuable\" Field Value Type Description String Players Declaration public const string Players = \"Player\" Field Value Type Description String"
  },
  "api/Global.LobbyOptionsUiConnections.html": {
    "href": "api/Global.LobbyOptionsUiConnections.html",
    "title": "Class LobbyOptionsUiConnections | A night in the house of Hunt",
    "keywords": "Class LobbyOptionsUiConnections Future work, handles updating UI state with hub config in lobby to allow setup Inheritance Object LobbyOptionsUiConnections Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LobbyOptionsUiConnections : MonoBehaviour"
  },
  "api/Global.LobbyUIHelper.html": {
    "href": "api/Global.LobbyUIHelper.html",
    "title": "Class LobbyUIHelper | A night in the house of Hunt",
    "keywords": "Class LobbyUIHelper Handles activating a canvas on clients with authority. AKA in the client they belong. Inheritance Object Mirror.NetworkBehaviour LobbyUIHelper Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LobbyUIHelper : NetworkBehaviour Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() SetAsReady(Boolean) Updates ready state on the network player Declaration public void SetAsReady(bool ready) Parameters Type Name Description Boolean ready"
  },
  "api/Global.Messages.html": {
    "href": "api/Global.Messages.html",
    "title": "Class Messages | A night in the house of Hunt",
    "keywords": "Class Messages Shows a quick message to the player Inheritance Object Mirror.NetworkBehaviour Messages Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Messages : NetworkBehaviour Fields timeOnScreen Declaration public int timeOnScreen Field Value Type Description Int32 Properties Instance Declaration public static Messages Instance { get; } Property Value Type Description Messages Methods ShowMessage(String) Show a message locally in this client. Can be used to show something computed on client Declaration public void ShowMessage(string message) Parameters Type Name Description String message The message to show ShowMessageIndividual(NetworkConnection, String) Show a message to a specific player, invoked from the server Declaration public void ShowMessageIndividual(NetworkConnection networkConnection, string message) Parameters Type Name Description Mirror.NetworkConnection networkConnection NetworkConnection to player String message The message to show Remarks Only usable form the server ShowMessageToAll(String) Show a message globally to the whole game Declaration public void ShowMessageToAll(string message) Parameters Type Name Description String message The message to show"
  },
  "api/Global.NanaBot.html": {
    "href": "api/Global.NanaBot.html",
    "title": "Class NanaBot | A night in the house of Hunt",
    "keywords": "Class NanaBot To be appended to a Nanabot NPC gameobject. Provides an interface to talk back to the user. Has text floating on top of her head. Inheritance Object NanaBot Namespace : Global Assembly : cs.temp.dll.dll Syntax public class NanaBot : MonoBehaviour Methods Talk(String) Talk something to the user. Will be written on top of Nanabot. As she would have said so. Declaration public void Talk(string text) Parameters Type Name Description String text The text to show to the user"
  },
  "api/Global.NetworkLayerChecker.html": {
    "href": "api/Global.NetworkLayerChecker.html",
    "title": "Class NetworkLayerChecker | A night in the house of Hunt",
    "keywords": "Class NetworkLayerChecker Inheritance Object Mirror.NetworkBehaviour Mirror.NetworkVisibility NetworkLayerChecker Namespace : Global Assembly : cs.temp.dll.dll Syntax public class NetworkLayerChecker : NetworkVisibility Fields visibleGameObjects Declaration public LayerMask visibleGameObjects Field Value Type Description LayerMask visUpdateInterval How often (in seconds) that this object should update the list of observers that can see it. Declaration public float visUpdateInterval Field Value Type Description Single Methods OnCheckObserver(NetworkConnection) Declaration public override bool OnCheckObserver(NetworkConnection conn) Parameters Type Name Description Mirror.NetworkConnection conn Returns Type Description Boolean Overrides Mirror.NetworkVisibility.OnCheckObserver(Mirror.NetworkConnection) OnRebuildObservers(HashSet<NetworkConnection>, Boolean) Callback used by the visibility system to (re)construct the set of observers that can see this object. Implementations of this callback should add network connections of players that can see this object to the observers set. Declaration public override void OnRebuildObservers(HashSet<NetworkConnection> observers, bool initialize) Parameters Type Name Description HashSet < Mirror.NetworkConnection > observers The new set of observers for this object. Boolean initialize True if the set of observers is being built for the first time. Overrides Mirror.NetworkVisibility.OnRebuildObservers(HashSet<Mirror.NetworkConnection>, System.Boolean) OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.OpenPuzzle.html": {
    "href": "api/Global.OpenPuzzle.html",
    "title": "Class OpenPuzzle | A night in the house of Hunt",
    "keywords": "Class OpenPuzzle Inheritance Object Mirror.NetworkBehaviour OpenPuzzle Implements IInteractuableBehaviour Namespace : Global Assembly : cs.temp.dll.dll Syntax public class OpenPuzzle : NetworkBehaviour, IInteractuableBehaviour Fields puzzleIsAvailable Declaration public bool puzzleIsAvailable Field Value Type Description Boolean Methods OnApproach(GameObject) Declaration public void OnApproach(GameObject approachedBy) Parameters Type Name Description GameObject approachedBy OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer() Implements IInteractuableBehaviour"
  },
  "api/Global.OpenSabotage.html": {
    "href": "api/Global.OpenSabotage.html",
    "title": "Class OpenSabotage | A night in the house of Hunt",
    "keywords": "Class OpenSabotage Inheritance Object Mirror.NetworkBehaviour OpenSabotage Implements IInteractuableBehaviour Namespace : Global Assembly : cs.temp.dll.dll Syntax public class OpenSabotage : NetworkBehaviour, IInteractuableBehaviour Methods OnApproach(GameObject) Declaration public void OnApproach(GameObject approachedBy) Parameters Type Name Description GameObject approachedBy OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer() Implements IInteractuableBehaviour"
  },
  "api/Global.OpenUrl.html": {
    "href": "api/Global.OpenUrl.html",
    "title": "Class OpenUrl | A night in the house of Hunt",
    "keywords": "Class OpenUrl Inheritance Object OpenUrl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class OpenUrl : MonoBehaviour Fields url Declaration public string url Field Value Type Description String Methods RedirectToUrl() Declaration public void RedirectToUrl()"
  },
  "api/Global.PlayerControls.html": {
    "href": "api/Global.PlayerControls.html",
    "title": "Class PlayerControls | A night in the house of Hunt",
    "keywords": "Class PlayerControls Inheritance Object Mirror.NetworkBehaviour PlayerControls Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerControls : NetworkBehaviour Fields rigidbody2D Declaration public Rigidbody2D rigidbody2D Field Value Type Description Rigidbody2D speed Declaration public float speed Field Value Type Description Single timeToMax Declaration public float timeToMax Field Value Type Description Single Methods OnStartAuthority() Declaration public override void OnStartAuthority() Overrides Mirror.NetworkBehaviour.OnStartAuthority() OnStopAuthority() Declaration public override void OnStopAuthority() Overrides Mirror.NetworkBehaviour.OnStopAuthority()"
  },
  "api/Global.PlayerName.html": {
    "href": "api/Global.PlayerName.html",
    "title": "Class PlayerName | A night in the house of Hunt",
    "keywords": "Class PlayerName Inheritance Object Mirror.NetworkBehaviour PlayerName Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerName : NetworkBehaviour Properties Name Declaration public string Name { get; } Property Value Type Description String Methods SetName(String) Declaration public void SetName(string name) Parameters Type Name Description String name"
  },
  "api/Global.PlayersChat.html": {
    "href": "api/Global.PlayersChat.html",
    "title": "Class PlayersChat | A night in the house of Hunt",
    "keywords": "Class PlayersChat Inheritance Object Mirror.NetworkBehaviour PlayersChat Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayersChat : NetworkBehaviour Methods CmdTransmitMessage(String, String) Declaration public void CmdTransmitMessage(string userName, string message) Parameters Type Name Description String userName String message OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStopAuthority() Declaration public override void OnStopAuthority() Overrides Mirror.NetworkBehaviour.OnStopAuthority() PrintMessage(String, String) Declaration public void PrintMessage(string userName, string message) Parameters Type Name Description String userName String message PrintOnScreen(String, String) Declaration public void PrintOnScreen(string userName, string message) Parameters Type Name Description String userName String message SendMessage() Declaration public void SendMessage() SendMessageOnEnter() Declaration public void SendMessageOnEnter() Events onNewMessage Declaration public static event Action<string, string> onNewMessage Event Type Type Description Action < String , String >"
  },
  "api/Global.PlayerSelectionBehavior.html": {
    "href": "api/Global.PlayerSelectionBehavior.html",
    "title": "Class PlayerSelectionBehavior | A night in the house of Hunt",
    "keywords": "Class PlayerSelectionBehavior Inheritance Object PlayerSelectionBehavior Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerSelectionBehavior : MonoBehaviour Fields characterListContainer Declaration public GameObject characterListContainer Field Value Type Description GameObject characterListToggleGroup Declaration public ToggleGroup characterListToggleGroup Field Value Type Description ToggleGroup characterRadioPrefab Declaration public GameObject characterRadioPrefab Field Value Type Description GameObject characterSelection Declaration public string characterSelection Field Value Type Description String errorPanel Declaration public GameObject errorPanel Field Value Type Description GameObject errorTextbox Declaration public Text errorTextbox Field Value Type Description Text playerName Declaration public string playerName Field Value Type Description String"
  },
  "api/Global.PlayerSelectionInLobby.html": {
    "href": "api/Global.PlayerSelectionInLobby.html",
    "title": "Class PlayerSelectionInLobby | A night in the house of Hunt",
    "keywords": "Class PlayerSelectionInLobby Handles setting a character type for current player, to be connected with lobby UI, before game starts. Can be used anywhere in the hierarchy. Inheritance Object Mirror.NetworkBehaviour PlayerSelectionInLobby Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerSelectionInLobby : NetworkBehaviour Methods CmdSetCharacterOnServer(CharacterTypes) Declaration public void CmdSetCharacterOnServer(CharacterTypes characterType) Parameters Type Name Description CharacterTypes characterType OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStopClient() Declaration public override void OnStopClient() Overrides Mirror.NetworkBehaviour.OnStopClient()"
  },
  "api/Global.PlayerSelectionInLobby.ToggleAndCharacter.html": {
    "href": "api/Global.PlayerSelectionInLobby.ToggleAndCharacter.html",
    "title": "Class PlayerSelectionInLobby.ToggleAndCharacter | A night in the house of Hunt",
    "keywords": "Class PlayerSelectionInLobby.ToggleAndCharacter Tiny container class that matches toggle with a character type Inheritance Object PlayerSelectionInLobby.ToggleAndCharacter Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ToggleAndCharacter Fields characterType Declaration public CharacterTypes characterType Field Value Type Description CharacterTypes toggle Declaration public Toggle toggle Field Value Type Description Toggle"
  },
  "api/Global.PlayersForVoting.html": {
    "href": "api/Global.PlayersForVoting.html",
    "title": "Class PlayersForVoting | A night in the house of Hunt",
    "keywords": "Class PlayersForVoting Sets up player buttons for the voting screen. Inheritance Object PlayersForVoting Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayersForVoting : MonoBehaviour Methods SkipVoting() Declaration public void SkipVoting()"
  },
  "api/Global.PlayerSkin.html": {
    "href": "api/Global.PlayerSkin.html",
    "title": "Class PlayerSkin | A night in the house of Hunt",
    "keywords": "Class PlayerSkin Inheritance Object Mirror.NetworkBehaviour PlayerSkin Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerSkin : NetworkBehaviour Fields characterSelected Declaration public CharacterTypes characterSelected Field Value Type Description CharacterTypes charactersMapping Declaration public AvailableCharacters charactersMapping Field Value Type Description AvailableCharacters Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient()"
  },
  "api/Global.PlayerVotingButton.html": {
    "href": "api/Global.PlayerVotingButton.html",
    "title": "Class PlayerVotingButton | A night in the house of Hunt",
    "keywords": "Class PlayerVotingButton Inheritance Object PlayerVotingButton Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerVotingButton : MonoBehaviour Fields onSelect Declaration public UnityEvent onSelect Field Value Type Description UnityEvent Properties IsDead Declaration public bool IsDead { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String PlayerSprite Declaration public Sprite PlayerSprite { get; set; } Property Value Type Description Sprite"
  },
  "api/Global.Puzzle.Class.html": {
    "href": "api/Global.Puzzle.Class.html",
    "title": "Enum Puzzle.Class | A night in the house of Hunt",
    "keywords": "Enum Puzzle.Class Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Class Fields Name Description A B C"
  },
  "api/Global.Puzzle.html": {
    "href": "api/Global.Puzzle.html",
    "title": "Class Puzzle | A night in the house of Hunt",
    "keywords": "Class Puzzle Inheritance Object Puzzle Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Puzzle : ScriptableObject Fields defaultWorkspace Declaration public TextAsset defaultWorkspace Field Value Type Description TextAsset expectedOutput Declaration public string expectedOutput Field Value Type Description String functionChecks Declaration public List<FunctionCheck> functionChecks Field Value Type Description List < FunctionCheck > id Declaration public string id Field Value Type Description String instructions Declaration public string instructions Field Value Type Description String puzzleClass Declaration public Puzzle.Class puzzleClass Field Value Type Description Puzzle.Class type Declaration public Puzzle.Type type Field Value Type Description Puzzle.Type"
  },
  "api/Global.Puzzle.Type.html": {
    "href": "api/Global.Puzzle.Type.html",
    "title": "Enum Puzzle.Type | A night in the house of Hunt",
    "keywords": "Enum Puzzle.Type Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Type Fields Name Description Conditionals Cycles Functions Variables"
  },
  "api/Global.PuzzleActiveOutline.html": {
    "href": "api/Global.PuzzleActiveOutline.html",
    "title": "Class PuzzleActiveOutline | A night in the house of Hunt",
    "keywords": "Class PuzzleActiveOutline Inheritance Object PuzzleActiveOutline Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleActiveOutline : MonoBehaviour Properties IsActive Declaration public bool IsActive { get; set; } Property Value Type Description Boolean"
  },
  "api/Global.PuzzleBase.html": {
    "href": "api/Global.PuzzleBase.html",
    "title": "Class PuzzleBase | A night in the house of Hunt",
    "keywords": "Class PuzzleBase Inheritance Object Mirror.NetworkBehaviour PuzzleBase CompleteBoolPuzzle CompletingForPuzzle CompletingWhilePuzzle DoWhilePuzzle ForPuzzle IfElsePuzzle IfThermometer QuestionPuzzle SequencePuzzle SetupDefaultFlowers SusbtringPuzzleLogic WhilePuzzle Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleBase : NetworkBehaviour Methods TargetClosePuzzle(NetworkConnection) Declaration protected virtual void TargetClosePuzzle(NetworkConnection target) Parameters Type Name Description Mirror.NetworkConnection target TargetRunCorrectFeedback(NetworkConnection) Declaration protected virtual void TargetRunCorrectFeedback(NetworkConnection target) Parameters Type Name Description Mirror.NetworkConnection target TargetRunWrongFeedback(NetworkConnection) Declaration protected virtual void TargetRunWrongFeedback(NetworkConnection target) Parameters Type Name Description Mirror.NetworkConnection target"
  },
  "api/Global.PuzzleCache.html": {
    "href": "api/Global.PuzzleCache.html",
    "title": "Class PuzzleCache | A night in the house of Hunt",
    "keywords": "Class PuzzleCache Inheritance Object PuzzleCache Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleCache : MonoBehaviour Fields Instance Declaration public static PuzzleCache Instance Field Value Type Description PuzzleCache puzzles Declaration public readonly List<Puzzle> puzzles Field Value Type Description List < Puzzle >"
  },
  "api/Global.PuzzleChecking.html": {
    "href": "api/Global.PuzzleChecking.html",
    "title": "Class PuzzleChecking | A night in the house of Hunt",
    "keywords": "Class PuzzleChecking Inheritance Object Mirror.NetworkBehaviour PuzzleChecking Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleChecking : NetworkBehaviour Methods CheckPuzzle(Puzzle, String, Action<PuzzleCheckResult>) Declaration public IEnumerator CheckPuzzle(Puzzle puzzle, string playerAnswer, Action<PuzzleCheckResult> onPuzzleCheckedCallback) Parameters Type Name Description Puzzle puzzle String playerAnswer Action < PuzzleCheckResult > onPuzzleCheckedCallback Returns Type Description IEnumerator"
  },
  "api/Global.PuzzleCheckResult.html": {
    "href": "api/Global.PuzzleCheckResult.html",
    "title": "Class PuzzleCheckResult | A night in the house of Hunt",
    "keywords": "Class PuzzleCheckResult Inheritance Object PuzzleCheckResult Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleCheckResult Fields hasFunctions Declaration public bool hasFunctions Field Value Type Description Boolean matchesOutput Declaration public bool matchesOutput Field Value Type Description Boolean passedCheck Declaration public bool passedCheck Field Value Type Description Boolean runOutput Declaration public string[] runOutput Field Value Type Description String []"
  },
  "api/Global.PuzzleCompletion.html": {
    "href": "api/Global.PuzzleCompletion.html",
    "title": "Class PuzzleCompletion | A night in the house of Hunt",
    "keywords": "Class PuzzleCompletion Keeps tabs on puzzle completion and handles events Inheritance Object Mirror.NetworkBehaviour PuzzleCompletion Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleCompletion : NetworkBehaviour Fields instance Declaration public static PuzzleCompletion instance Field Value Type Description PuzzleCompletion puzzlesCompleted Declaration public SyncList<PuzzleCompletion.PuzzleCompletionInfo> puzzlesCompleted Field Value Type Description Mirror.SyncList < PuzzleCompletion.PuzzleCompletionInfo > Properties PuzzlesAvailable Declaration public int PuzzlesAvailable { get; } Property Value Type Description Int32 PuzzlesDone Declaration public int PuzzlesDone { get; } Property Value Type Description Int32 Methods MarkCompleted(PuzzleId, NetworkIdentity) Register puzzle as completed Declaration public void MarkCompleted(PuzzleId id, NetworkIdentity doneByPlayer) Parameters Type Name Description PuzzleId id Mirror.NetworkIdentity doneByPlayer OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopClient() Declaration public override void OnStopClient() Overrides Mirror.NetworkBehaviour.OnStopClient() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer() Events OnFinishedAllPuzzles Called when all puzzles are solved Declaration public static event Action OnFinishedAllPuzzles Event Type Type Description Action OnPuzzleCompleted Called on puzzle completion. Called when anyone finishes, not just a specific player Declaration public static event Action<PuzzleId, NetworkIdentity> OnPuzzleCompleted Event Type Type Description Action < PuzzleId , Mirror.NetworkIdentity > Remarks Only applicable on the server"
  },
  "api/Global.PuzzleCompletion.PuzzleCompletionInfo.html": {
    "href": "api/Global.PuzzleCompletion.PuzzleCompletionInfo.html",
    "title": "Class PuzzleCompletion.PuzzleCompletionInfo | A night in the house of Hunt",
    "keywords": "Class PuzzleCompletion.PuzzleCompletionInfo Inheritance Object PuzzleCompletion.PuzzleCompletionInfo Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleCompletionInfo Fields Id Declaration public PuzzleId Id Field Value Type Description PuzzleId netIdentity Declaration public NetworkIdentity netIdentity Field Value Type Description Mirror.NetworkIdentity"
  },
  "api/Global.PuzzleCompletionInfoSerialization.html": {
    "href": "api/Global.PuzzleCompletionInfoSerialization.html",
    "title": "Class PuzzleCompletionInfoSerialization | A night in the house of Hunt",
    "keywords": "Class PuzzleCompletionInfoSerialization Inheritance Object PuzzleCompletionInfoSerialization Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class PuzzleCompletionInfoSerialization Methods ReadPuzzleCompletionInfo(NetworkReader) Declaration public static PuzzleCompletion.PuzzleCompletionInfo ReadPuzzleCompletionInfo(this NetworkReader reader) Parameters Type Name Description Mirror.NetworkReader reader Returns Type Description PuzzleCompletion.PuzzleCompletionInfo WritePuzzleCompletionInfo(NetworkWriter, PuzzleCompletion.PuzzleCompletionInfo) Declaration public static void WritePuzzleCompletionInfo(this NetworkWriter writer, PuzzleCompletion.PuzzleCompletionInfo puzzleCompletionInfo) Parameters Type Name Description Mirror.NetworkWriter writer PuzzleCompletion.PuzzleCompletionInfo puzzleCompletionInfo"
  },
  "api/Global.PuzzleId.html": {
    "href": "api/Global.PuzzleId.html",
    "title": "Enum PuzzleId | A night in the house of Hunt",
    "keywords": "Enum PuzzleId Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum PuzzleId Fields Name Description DoWhileMotorStarter ForMixing ForWashingBucket IfElse IfFlowerPicking Sequence1 Sequence2 Sequence3 Substring TemperatureCompareInt VariableBoolean WhileFillCows WhileFillingBucket"
  },
  "api/Global.PuzzleIdSerialization.html": {
    "href": "api/Global.PuzzleIdSerialization.html",
    "title": "Class PuzzleIdSerialization | A night in the house of Hunt",
    "keywords": "Class PuzzleIdSerialization Inheritance Object PuzzleIdSerialization Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class PuzzleIdSerialization Methods ReadPuzzleId(NetworkReader) Declaration public static PuzzleId ReadPuzzleId(this NetworkReader reader) Parameters Type Name Description Mirror.NetworkReader reader Returns Type Description PuzzleId WritePuzzleId(NetworkWriter, PuzzleId) Declaration public static void WritePuzzleId(this NetworkWriter writer, PuzzleId puzzleId) Parameters Type Name Description Mirror.NetworkWriter writer PuzzleId puzzleId"
  },
  "api/Global.PuzzleInformation.html": {
    "href": "api/Global.PuzzleInformation.html",
    "title": "Struct PuzzleInformation | A night in the house of Hunt",
    "keywords": "Struct PuzzleInformation Implements IEquatable < PuzzleInformation > Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct PuzzleInformation : IEquatable<PuzzleInformation> Constructors PuzzleInformation(Boolean) Declaration public PuzzleInformation(bool completed) Parameters Type Name Description Boolean completed Fields completed Declaration public bool completed Field Value Type Description Boolean Methods Equals(PuzzleInformation) Declaration public bool Equals(PuzzleInformation other) Parameters Type Name Description PuzzleInformation other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) Implements IEquatable<>"
  },
  "api/Global.PuzzleInformationSerialization.html": {
    "href": "api/Global.PuzzleInformationSerialization.html",
    "title": "Class PuzzleInformationSerialization | A night in the house of Hunt",
    "keywords": "Class PuzzleInformationSerialization Custom serialization because weaver is ignoring my struct Inheritance Object PuzzleInformationSerialization Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class PuzzleInformationSerialization Methods ReadPuzzleInformation(NetworkReader) Declaration public static PuzzleInformation ReadPuzzleInformation(this NetworkReader reader) Parameters Type Name Description Mirror.NetworkReader reader Returns Type Description PuzzleInformation WritePuzzleId(NetworkWriter, PuzzleInformation) Declaration public static void WritePuzzleId(this NetworkWriter writer, PuzzleInformation pi) Parameters Type Name Description Mirror.NetworkWriter writer PuzzleInformation pi"
  },
  "api/Global.PuzzlesListUi.html": {
    "href": "api/Global.PuzzlesListUi.html",
    "title": "Class PuzzlesListUi | A night in the house of Hunt",
    "keywords": "Class PuzzlesListUi Shows in UI location of not yet solved puzzles and ocurring emergencies. Listens to puzzle completion and emergencies started to update list. Inheritance Object Mirror.NetworkBehaviour PuzzlesListUi Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzlesListUi : NetworkBehaviour Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.PuzzleSoundFeedback.html": {
    "href": "api/Global.PuzzleSoundFeedback.html",
    "title": "Class PuzzleSoundFeedback | A night in the house of Hunt",
    "keywords": "Class PuzzleSoundFeedback Inheritance Object PuzzleSoundFeedback Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleSoundFeedback : MonoBehaviour Fields instance Declaration public static PuzzleSoundFeedback instance Field Value Type Description PuzzleSoundFeedback Methods CorrectAnswer() Declaration public void CorrectAnswer() WrongAnswer() Declaration public void WrongAnswer()"
  },
  "api/Global.PuzzleUI.html": {
    "href": "api/Global.PuzzleUI.html",
    "title": "Class PuzzleUI | A night in the house of Hunt",
    "keywords": "Class PuzzleUI Handles logic of puzzle UI with a simple interface for other code. Handles closing UI when there's voting. Handles opening puzzle. Handles closing puzzle when user presses ESC Inheritance Object Mirror.NetworkBehaviour PuzzleUI Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PuzzleUI : NetworkBehaviour Fields instance Declaration public static PuzzleUI instance Field Value Type Description PuzzleUI Methods ClosePuzzles() Usable in the client, closes any puzzle on screen Declaration public void ClosePuzzles() OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer() OpenPuzzles(PuzzleId, GameObject) Opens puzzle Declaration public void OpenPuzzles(PuzzleId puzzle, GameObject openedBy) Parameters Type Name Description PuzzleId puzzle Id of puzzle GameObject openedBy GameObject that interacted, a player (that contains a NetworkIdentity) Events OnClosePuzzleInClient Called when close puzzle is called, there might be a screen visible but it's not guaranteed. Declaration public static event Action OnClosePuzzleInClient Event Type Type Description Action Remarks Only applicable on clients OnOpenPuzzleInClient Called when a puzzle UI is to be shown on a specific client. Declaration public static event Action OnOpenPuzzleInClient Event Type Type Description Action Remarks Only applicable on clients"
  },
  "api/Global.QuestionPuzzle.html": {
    "href": "api/Global.QuestionPuzzle.html",
    "title": "Class QuestionPuzzle | A night in the house of Hunt",
    "keywords": "Class QuestionPuzzle Inheritance Object Mirror.NetworkBehaviour PuzzleBase QuestionPuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class QuestionPuzzle : PuzzleBase Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient()"
  },
  "api/Global.ReportDeath.html": {
    "href": "api/Global.ReportDeath.html",
    "title": "Class ReportDeath | A night in the house of Hunt",
    "keywords": "Class ReportDeath Inheritance Object Mirror.NetworkBehaviour ReportDeath Implements IInteractuableBehaviour Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ReportDeath : NetworkBehaviour, IInteractuableBehaviour Methods OnApproach(GameObject) Declaration public void OnApproach(GameObject approachedBy) Parameters Type Name Description GameObject approachedBy Implements IInteractuableBehaviour"
  },
  "api/Global.SabotageBoilers.html": {
    "href": "api/Global.SabotageBoilers.html",
    "title": "Class SabotageBoilers | A night in the house of Hunt",
    "keywords": "Class SabotageBoilers Inheritance Object Mirror.NetworkBehaviour SabotagePuzzle SabotageBoilers Inherited Members SabotagePuzzle.ui SabotagePuzzle.IsPuzzleEnabled SabotagePuzzle.OnStartServer() SabotagePuzzle.ResetSabotage(Int32) SabotagePuzzle.ShowPuzzle() SabotagePuzzle.OnPuzzleActivated() SabotagePuzzle.SetPuzzleAsCompleted(NetworkConnection) SabotagePuzzle.OnStopServer() SabotagePuzzle.TargetClosePuzzle(NetworkConnection) SabotagePuzzle.CloseAllPuzzle() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SabotageBoilers : SabotagePuzzle Fields waitingOnOtherPlayers Declaration public string waitingOnOtherPlayers Field Value Type Description String waitingOnPlayerPress Declaration public string waitingOnPlayerPress Field Value Type Description String Methods AreEmergencyConditionsEnough(Emergency.EmergencyType) Declaration protected override bool AreEmergencyConditionsEnough(Emergency.EmergencyType type) Parameters Type Name Description Emergency.EmergencyType type Returns Type Description Boolean Overrides SabotagePuzzle.AreEmergencyConditionsEnough(Emergency.EmergencyType) ArePuzzleCompletionConditionsReached() Declaration protected override bool ArePuzzleCompletionConditionsReached() Returns Type Description Boolean Overrides SabotagePuzzle.ArePuzzleCompletionConditionsReached() OnPuzzleCompleted() Declaration protected override void OnPuzzleCompleted() Overrides SabotagePuzzle.OnPuzzleCompleted() OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStopClient() Declaration public override void OnStopClient() Overrides Mirror.NetworkBehaviour.OnStopClient()"
  },
  "api/Global.SabotageBoilers.PlayerStatus.html": {
    "href": "api/Global.SabotageBoilers.PlayerStatus.html",
    "title": "Struct SabotageBoilers.PlayerStatus | A night in the house of Hunt",
    "keywords": "Struct SabotageBoilers.PlayerStatus Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct PlayerStatus Fields playerOnButton Declaration public NetworkIdentity playerOnButton Field Value Type Description Mirror.NetworkIdentity startClick Declaration public DateTime startClick Field Value Type Description DateTime"
  },
  "api/Global.SabotagePuzzle.html": {
    "href": "api/Global.SabotagePuzzle.html",
    "title": "Class SabotagePuzzle | A night in the house of Hunt",
    "keywords": "Class SabotagePuzzle Base for sabotages. Has facilities for puzzles that require multiple players to respond it in a time limit to be marked as done. Opening puzzle is done by the client. Closing will be done automagically from the server, either when sabotage is solved (closing in all clients) or when a player gets it right. Inheritance Object Mirror.NetworkBehaviour SabotagePuzzle ElectricitySabotage SabotageBoilers SabotageQuestions Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SabotagePuzzle : NetworkBehaviour Fields ui Declaration protected GameObject ui Field Value Type Description GameObject Properties IsPuzzleEnabled Enables opening a UI for solving puzzle primaraly Declaration protected bool IsPuzzleEnabled { get; set; } Property Value Type Description Boolean Methods AreEmergencyConditionsEnough(Emergency.EmergencyType) Called after an emergency ocurred. The returned bool is if all conditions to trigger emergency are ready. Regularly just checking for the emergency type is enough. Declaration protected virtual bool AreEmergencyConditionsEnough(Emergency.EmergencyType type) Parameters Type Name Description Emergency.EmergencyType type Returns Type Description Boolean ArePuzzleCompletionConditionsReached() Declaration protected virtual bool ArePuzzleCompletionConditionsReached() Returns Type Description Boolean CloseAllPuzzle() Declaration protected void CloseAllPuzzle() OnPuzzleActivated() Called when puzzle was shown. Declaration protected virtual void OnPuzzleActivated() Remarks Should be called on server OnPuzzleCompleted() Implement on inheritors to set the action to do when the puzzle has been solved by the players Allways call base implementation via base.OnPuzzleCompleted() or some default behaviour will be missing! Declaration protected virtual void OnPuzzleCompleted() Remarks Dont' call directly OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer() ResetSabotage(Int32) Declaration protected virtual void ResetSabotage(int _) Parameters Type Name Description Int32 _ SetPuzzleAsCompleted(NetworkConnection) Call on the server when the puzzle has been finished by the user. Declaration protected void SetPuzzleAsCompleted(NetworkConnection player) Parameters Type Name Description Mirror.NetworkConnection player ShowPuzzle() Shows sabotage UI. Note. Might not activate if for example, this sabotage isn't active. Declaration public void ShowPuzzle() TargetClosePuzzle(NetworkConnection) Declaration protected void TargetClosePuzzle(NetworkConnection target) Parameters Type Name Description Mirror.NetworkConnection target"
  },
  "api/Global.SabotageQuestionList.html": {
    "href": "api/Global.SabotageQuestionList.html",
    "title": "Class SabotageQuestionList | A night in the house of Hunt",
    "keywords": "Class SabotageQuestionList Inheritance Object SabotageQuestionList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SabotageQuestionList : ScriptableObject Fields questions Declaration public List<SabotageQuestionList.Question> questions Field Value Type Description List < SabotageQuestionList.Question >"
  },
  "api/Global.SabotageQuestionList.Question.html": {
    "href": "api/Global.SabotageQuestionList.Question.html",
    "title": "Class SabotageQuestionList.Question | A night in the house of Hunt",
    "keywords": "Class SabotageQuestionList.Question Inheritance Object SabotageQuestionList.Question Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class Question Fields answers Declaration public List<string> answers Field Value Type Description List < String > correctAnswerIndex Declaration public int correctAnswerIndex Field Value Type Description Int32 question Declaration public string question Field Value Type Description String"
  },
  "api/Global.SabotageQuestions.html": {
    "href": "api/Global.SabotageQuestions.html",
    "title": "Class SabotageQuestions | A night in the house of Hunt",
    "keywords": "Class SabotageQuestions Inheritance Object Mirror.NetworkBehaviour SabotagePuzzle SabotageQuestions Inherited Members SabotagePuzzle.ui SabotagePuzzle.IsPuzzleEnabled SabotagePuzzle.OnStartServer() SabotagePuzzle.ResetSabotage(Int32) SabotagePuzzle.ShowPuzzle() SabotagePuzzle.SetPuzzleAsCompleted(NetworkConnection) SabotagePuzzle.OnPuzzleCompleted() SabotagePuzzle.OnStopServer() SabotagePuzzle.TargetClosePuzzle(NetworkConnection) SabotagePuzzle.CloseAllPuzzle() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SabotageQuestions : SabotagePuzzle Methods AreEmergencyConditionsEnough(Emergency.EmergencyType) Declaration protected override bool AreEmergencyConditionsEnough(Emergency.EmergencyType type) Parameters Type Name Description Emergency.EmergencyType type Returns Type Description Boolean Overrides SabotagePuzzle.AreEmergencyConditionsEnough(Emergency.EmergencyType) ArePuzzleCompletionConditionsReached() Declaration protected override bool ArePuzzleCompletionConditionsReached() Returns Type Description Boolean Overrides SabotagePuzzle.ArePuzzleCompletionConditionsReached() OnPuzzleActivated() Declaration protected override void OnPuzzleActivated() Overrides SabotagePuzzle.OnPuzzleActivated() SetAsResponder() Used by UI. Sets on server as one of the players to solve questions Declaration public void SetAsResponder()"
  },
  "api/Global.SabotageQuestions.QuestionState.html": {
    "href": "api/Global.SabotageQuestions.QuestionState.html",
    "title": "Enum SabotageQuestions.QuestionState | A night in the house of Hunt",
    "keywords": "Enum SabotageQuestions.QuestionState Used for the state machine of the sabotage questions Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum QuestionState Fields Name Description Finished OnQuestion WaitingPlayers"
  },
  "api/Global.SequenceConfig.html": {
    "href": "api/Global.SequenceConfig.html",
    "title": "Class SequenceConfig | A night in the house of Hunt",
    "keywords": "Class SequenceConfig Inheritance Object SequenceConfig Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SequenceConfig : ScriptableObject Fields endPosition Position the player must get to to complete Declaration public Vector2Int endPosition Field Value Type Description Vector2Int floor The walkable blocks in this sequence puzzle. Represents two dimensions, the array elements with true mean that it can be walked upon. Can map to needed index with (currentPosition.y * horizontalSize) + currentPosition.x] Declaration public bool[] floor Field Value Type Description Boolean [] Remarks If changed on runtime, it will run into unforseen consequences. Only to set in editor. horizontalSize Horizontal size of game area Declaration public int horizontalSize Field Value Type Description Int32 startPosition Position where the player starts to move to Declaration public Vector2Int startPosition Field Value Type Description Vector2Int verticalSize Vertical size of game area Declaration public int verticalSize Field Value Type Description Int32"
  },
  "api/Global.SequenceEditor.html": {
    "href": "api/Global.SequenceEditor.html",
    "title": "Class SequenceEditor | A night in the house of Hunt",
    "keywords": "Class SequenceEditor Custom editor to simplify creating a variety of sequence puzzles Inheritance Object SequenceEditor Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SequenceEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Global.SequenceGrid.html": {
    "href": "api/Global.SequenceGrid.html",
    "title": "Class SequenceGrid | A night in the house of Hunt",
    "keywords": "Class SequenceGrid Playground for sequence puzzle Inheritance Object SequenceGrid Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SequenceGrid : MonoBehaviour Fields floorBackground Declaration public Sprite floorBackground Field Value Type Description Sprite Properties CurrentPosition Declaration public Vector2Int CurrentPosition { get; set; } Property Value Type Description Vector2Int FloorBackground Sprite to use in boxes player can walk in Declaration public Sprite FloorBackground { get; set; } Property Value Type Description Sprite Player Player sprite Declaration public Sprite Player { get; set; } Property Value Type Description Sprite Sequence Sequence to show in screen. Updates screen as soon as it changes Declaration public SequenceConfig Sequence { get; set; } Property Value Type Description SequenceConfig VoidBackground Sprite to use in boxes that if you walk into, you'd fall Declaration public Sprite VoidBackground { get; set; } Property Value Type Description Sprite Methods ResetSequence() Declaration public void ResetSequence()"
  },
  "api/Global.SequencePuzzle.html": {
    "href": "api/Global.SequencePuzzle.html",
    "title": "Class SequencePuzzle | A night in the house of Hunt",
    "keywords": "Class SequencePuzzle Sequence puzzle config Currently messy, there's no way to make sure on server this has been completed correctly. Inheritance Object Mirror.NetworkBehaviour PuzzleBase SequencePuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SequencePuzzle : PuzzleBase Methods VerifyPuzzle() Call after sequence has been completed to count it on server Declaration public void VerifyPuzzle()"
  },
  "api/Global.SequencePuzzleTileModel.html": {
    "href": "api/Global.SequencePuzzleTileModel.html",
    "title": "Class SequencePuzzleTileModel | A night in the house of Hunt",
    "keywords": "Class SequencePuzzleTileModel Model for setup of sequence tiles. This model serves as abstraction between implementation specifics and the idea of a tile containing several layers. Inheritance Object SequencePuzzleTileModel Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SequencePuzzleTileModel : MonoBehaviour Properties BackgroundSprite Sprite to use for background (floor tiles) Declaration public Sprite BackgroundSprite { get; set; } Property Value Type Description Sprite ForegroundSprite Sprite to use for foreground (player, maybe obstacles) Declaration public Sprite ForegroundSprite { get; set; } Property Value Type Description Sprite"
  },
  "api/Global.SetPortOnWebGl.html": {
    "href": "api/Global.SetPortOnWebGl.html",
    "title": "Class SetPortOnWebGl | A night in the house of Hunt",
    "keywords": "Class SetPortOnWebGl Inheritance Object SetPortOnWebGl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SetPortOnWebGl : MonoBehaviour"
  },
  "api/Global.SetResultOnGameEnd.EndGameResult.html": {
    "href": "api/Global.SetResultOnGameEnd.EndGameResult.html",
    "title": "Enum SetResultOnGameEnd.EndGameResult | A night in the house of Hunt",
    "keywords": "Enum SetResultOnGameEnd.EndGameResult Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum EndGameResult Fields Name Description AssasinsWin NoOneHasWonYet ProgrammersWin"
  },
  "api/Global.SetResultOnGameEnd.html": {
    "href": "api/Global.SetResultOnGameEnd.html",
    "title": "Class SetResultOnGameEnd | A night in the house of Hunt",
    "keywords": "Class SetResultOnGameEnd In charge of controlling stuff that happens when the games end. Actions: Shows screen for loosers and winners. Results: Programmers win when they vote all assasins Programmers win when they finish all tasks Assasins win when there's the same number of programmers as of them, either by killing or by voting out Assasins win when players don't fix a sabotage on time Inheritance Object Mirror.NetworkBehaviour SetResultOnGameEnd Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SetResultOnGameEnd : NetworkBehaviour Methods OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.SetServerUrlToNetworkManagerOnStart.html": {
    "href": "api/Global.SetServerUrlToNetworkManagerOnStart.html",
    "title": "Class SetServerUrlToNetworkManagerOnStart | A night in the house of Hunt",
    "keywords": "Class SetServerUrlToNetworkManagerOnStart Sets the network addresss in network connection to test server when running on the web Inheritance Object SetServerUrlToNetworkManagerOnStart Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SetServerUrlToNetworkManagerOnStart : MonoBehaviour"
  },
  "api/Global.SetupDefaultFlowers.html": {
    "href": "api/Global.SetupDefaultFlowers.html",
    "title": "Class SetupDefaultFlowers | A night in the house of Hunt",
    "keywords": "Class SetupDefaultFlowers Controls logic for if puzzle. On server a flower type is decided on start. Also a random selection of six flowers is created and send to client to create buttons for user. On click, these send a message on client to check they are the correct type. Inheritance Object Mirror.NetworkBehaviour PuzzleBase SetupDefaultFlowers Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SetupDefaultFlowers : PuzzleBase Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer()"
  },
  "api/Global.SetupOnClient.html": {
    "href": "api/Global.SetupOnClient.html",
    "title": "Class SetupOnClient | A night in the house of Hunt",
    "keywords": "Class SetupOnClient Inheritance Object SetupOnClient Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SetupOnClient : MonoBehaviour"
  },
  "api/Global.ShowPlayerRoleOnStart.html": {
    "href": "api/Global.ShowPlayerRoleOnStart.html",
    "title": "Class ShowPlayerRoleOnStart | A night in the house of Hunt",
    "keywords": "Class ShowPlayerRoleOnStart Inheritance Object Mirror.NetworkBehaviour ShowPlayerRoleOnStart Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ShowPlayerRoleOnStart : NetworkBehaviour Methods OnStartAuthority() Declaration public override void OnStartAuthority() Overrides Mirror.NetworkBehaviour.OnStartAuthority()"
  },
  "api/Global.ShowPuzzleRequest.html": {
    "href": "api/Global.ShowPuzzleRequest.html",
    "title": "Class ShowPuzzleRequest | A night in the house of Hunt",
    "keywords": "Class ShowPuzzleRequest Inheritance Object ShowPuzzleRequest Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ShowPuzzleRequest Fields Documentation Declaration public string Documentation Field Value Type Description String InitialWorkspaceConfiguration Declaration public string InitialWorkspaceConfiguration Field Value Type Description String Instructions Declaration public string Instructions Field Value Type Description String PuzzleId Declaration public string PuzzleId Field Value Type Description String"
  },
  "api/Global.SoundAlarmDuringEmergency.html": {
    "href": "api/Global.SoundAlarmDuringEmergency.html",
    "title": "Class SoundAlarmDuringEmergency | A night in the house of Hunt",
    "keywords": "Class SoundAlarmDuringEmergency For auditory alarm. Starts alarm on emergency start. Ends when resolved or players lost. Events are listened on server and an RPC call controls the AudioSource on the client. Inheritance Object Mirror.NetworkBehaviour SoundAlarmDuringEmergency Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SoundAlarmDuringEmergency : NetworkBehaviour Methods OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.SpecialButton.html": {
    "href": "api/Global.SpecialButton.html",
    "title": "Class SpecialButton | A night in the house of Hunt",
    "keywords": "Class SpecialButton Inheritance Object SpecialButton Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SpecialButton : Button Fields onPressedEnded Declaration public UnityEvent onPressedEnded Field Value Type Description UnityEvent onPressedStarted Declaration public UnityEvent onPressedStarted Field Value Type Description UnityEvent Properties IsCurrentlyPressed Declaration public bool IsCurrentlyPressed { get; } Property Value Type Description Boolean"
  },
  "api/Global.SpinUIOnDrag.html": {
    "href": "api/Global.SpinUIOnDrag.html",
    "title": "Class SpinUIOnDrag | A night in the house of Hunt",
    "keywords": "Class SpinUIOnDrag Inheritance Object SpinUIOnDrag Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SpinUIOnDrag : MonoBehaviour Fields onCycle Declaration public UnityEvent onCycle Field Value Type Description UnityEvent Methods OnDrag() Declaration public void OnDrag()"
  },
  "api/Global.SpriteFlipOnVelocity.html": {
    "href": "api/Global.SpriteFlipOnVelocity.html",
    "title": "Class SpriteFlipOnVelocity | A night in the house of Hunt",
    "keywords": "Class SpriteFlipOnVelocity Inheritance Object SpriteFlipOnVelocity Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SpriteFlipOnVelocity : MonoBehaviour"
  },
  "api/Global.StartServer.html": {
    "href": "api/Global.StartServer.html",
    "title": "Class StartServer | A night in the house of Hunt",
    "keywords": "Class StartServer Starts server automatically when game is started unnatended (with flag -batchmode) Inheritance Object StartServer Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StartServer : MonoBehaviour"
  },
  "api/Global.SusbtringPuzzleLogic.html": {
    "href": "api/Global.SusbtringPuzzleLogic.html",
    "title": "Class SusbtringPuzzleLogic | A night in the house of Hunt",
    "keywords": "Class SusbtringPuzzleLogic Inheritance Object Mirror.NetworkBehaviour PuzzleBase SusbtringPuzzleLogic Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SusbtringPuzzleLogic : PuzzleBase Methods OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer()"
  },
  "api/Global.Tags.html": {
    "href": "api/Global.Tags.html",
    "title": "Class Tags | A night in the house of Hunt",
    "keywords": "Class Tags Inheritance Object Tags Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class Tags Fields AvailablePlayerManager Declaration public const string AvailablePlayerManager = \"AvailablePlayerManager\" Field Value Type Description String HubConfig Declaration public const string HubConfig = \"HubConfig\" Field Value Type Description String MainCamera Declaration public const string MainCamera = \"MainCamera\" Field Value Type Description String Nanabot Declaration public const string Nanabot = \"Nanabot\" Field Value Type Description String Player Declaration public const string Player = \"Player\" Field Value Type Description String TeletransportHelper Declaration public const string TeletransportHelper = \"TeletransportHelper\" Field Value Type Description String UiManager Declaration public const string UiManager = \"UIManager\" Field Value Type Description String VotingManager Declaration public const string VotingManager = \"VotingManager\" Field Value Type Description String"
  },
  "api/Global.TaskProgress.html": {
    "href": "api/Global.TaskProgress.html",
    "title": "Class TaskProgress | A night in the house of Hunt",
    "keywords": "Class TaskProgress Updates task progress bar in client Inheritance Object Mirror.NetworkBehaviour TaskProgress Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TaskProgress : NetworkBehaviour Methods OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.Teletransport.GoUpOn.html": {
    "href": "api/Global.Teletransport.GoUpOn.html",
    "title": "Enum Teletransport.GoUpOn | A night in the house of Hunt",
    "keywords": "Enum Teletransport.GoUpOn Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum GoUpOn Fields Name Description OriginVent TeletransportVent"
  },
  "api/Global.Teletransport.html": {
    "href": "api/Global.Teletransport.html",
    "title": "Class Teletransport | A night in the house of Hunt",
    "keywords": "Class Teletransport Acknowledges when player has interacted with teletransport vent, and adds player to teletransport manager to handle on teletransport options and such Inheritance Object Mirror.NetworkBehaviour Teletransport Implements IInteractuableBehaviour Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Teletransport : NetworkBehaviour, IInteractuableBehaviour Fields teletransportTo Declaration public Transform teletransportTo Field Value Type Description Transform Methods OnApproach(GameObject) Declaration public void OnApproach(GameObject approachedBy) Parameters Type Name Description GameObject approachedBy Implements IInteractuableBehaviour"
  },
  "api/Global.TeletransportManager.html": {
    "href": "api/Global.TeletransportManager.html",
    "title": "Class TeletransportManager | A night in the house of Hunt",
    "keywords": "Class TeletransportManager Handles teletransport behaviour once a player enters the vent. Inheritance Object Mirror.NetworkBehaviour TeletransportManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TeletransportManager : NetworkBehaviour Fields instance Declaration public static TeletransportManager instance Field Value Type Description TeletransportManager Methods AddToTeletransportList(NetworkIdentity, GameObject) Declaration public void AddToTeletransportList(NetworkIdentity player, GameObject currentVent) Parameters Type Name Description Mirror.NetworkIdentity player GameObject currentVent CmdMoveToNextVent(NetworkConnectionToClient) Declaration public void CmdMoveToNextVent(NetworkConnectionToClient sender = null) Parameters Type Name Description Mirror.NetworkConnectionToClient sender ComeOut() Declaration public void ComeOut() MoveToNextVent() Declaration public void MoveToNextVent() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() RemoveToTeletransportList(NetworkIdentity) Declaration public void RemoveToTeletransportList(NetworkIdentity player) Parameters Type Name Description Mirror.NetworkIdentity player"
  },
  "api/Global.TeletransportUiConnect.html": {
    "href": "api/Global.TeletransportUiConnect.html",
    "title": "Class TeletransportUiConnect | A night in the house of Hunt",
    "keywords": "Class TeletransportUiConnect Inheritance Object TeletransportUiConnect Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TeletransportUiConnect : MonoBehaviour Methods HideUi() Declaration public void HideUi() OpenUi() Declaration public void OpenUi()"
  },
  "api/Global.Test.html": {
    "href": "api/Global.Test.html",
    "title": "Class Test | A night in the house of Hunt",
    "keywords": "Class Test Inheritance Object Test Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Test : MonoBehaviour Methods OnClick() Declaration public void OnClick()"
  },
  "api/Global.TriggerEmergencyMeeting.html": {
    "href": "api/Global.TriggerEmergencyMeeting.html",
    "title": "Class TriggerEmergencyMeeting | A night in the house of Hunt",
    "keywords": "Class TriggerEmergencyMeeting Inheritance Object Mirror.NetworkBehaviour TriggerEmergencyMeeting Implements IInteractuableBehaviour Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TriggerEmergencyMeeting : NetworkBehaviour, IInteractuableBehaviour Methods OnApproach(GameObject) Declaration public void OnApproach(GameObject approachedBy) Parameters Type Name Description GameObject approachedBy Implements IInteractuableBehaviour"
  },
  "api/Global.UiElements.html": {
    "href": "api/Global.UiElements.html",
    "title": "Class UiElements | A night in the house of Hunt",
    "keywords": "Class UiElements Inheritance Object UiElements Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UiElements : MonoBehaviour Fields votingScreen Declaration public GameObject votingScreen Field Value Type Description GameObject"
  },
  "api/Global.UIGameStart.html": {
    "href": "api/Global.UIGameStart.html",
    "title": "Class UIGameStart | A night in the house of Hunt",
    "keywords": "Class UIGameStart Inheritance Object Mirror.NetworkBehaviour UIGameStart Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UIGameStart : NetworkBehaviour Fields lobbyNetworkManager Declaration public NetworkManager lobbyNetworkManager Field Value Type Description Mirror.NetworkManager Methods StartGame() Declaration public void StartGame()"
  },
  "api/Global.UILobbyConnect.html": {
    "href": "api/Global.UILobbyConnect.html",
    "title": "Class UILobbyConnect | A night in the house of Hunt",
    "keywords": "Class UILobbyConnect Inheritance Object UILobbyConnect Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UILobbyConnect : MonoBehaviour Methods LookForGameOnServer() Declaration public void LookForGameOnServer()"
  },
  "api/Global.UpdateTimeRemaining.html": {
    "href": "api/Global.UpdateTimeRemaining.html",
    "title": "Class UpdateTimeRemaining | A night in the house of Hunt",
    "keywords": "Class UpdateTimeRemaining Updates a given text with the time remaining for voting. For use with the voting screen. Inheritance Object UpdateTimeRemaining Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UpdateTimeRemaining : MonoBehaviour"
  },
  "api/Global.UseWSSInHttps.html": {
    "href": "api/Global.UseWSSInHttps.html",
    "title": "Class UseWSSInHttps | A night in the house of Hunt",
    "keywords": "Class UseWSSInHttps Inheritance Object UseWSSInHttps Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UseWSSInHttps : MonoBehaviour"
  },
  "api/Global.VoteAdmin.html": {
    "href": "api/Global.VoteAdmin.html",
    "title": "Class VoteAdmin | A night in the house of Hunt",
    "keywords": "Class VoteAdmin Maneja realizar voto para un unico jugador Inheritance Object Mirror.NetworkBehaviour VoteAdmin Namespace : Global Assembly : cs.temp.dll.dll Syntax public class VoteAdmin : NetworkBehaviour Fields hasCastedVote Declaration public bool hasCastedVote Field Value Type Description Boolean votesFor Declaration public GameObject votesFor Field Value Type Description GameObject Methods CmdVoteFor(GameObject) Declaration public void CmdVoteFor(GameObject gameObject) Parameters Type Name Description GameObject gameObject"
  },
  "api/Global.VotingManager.html": {
    "href": "api/Global.VotingManager.html",
    "title": "Class VotingManager | A night in the house of Hunt",
    "keywords": "Class VotingManager Inheritance Object Mirror.NetworkBehaviour VotingManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class VotingManager : NetworkBehaviour Fields canVote Declaration public bool canVote Field Value Type Description Boolean timeRemaining Declaration public int timeRemaining Field Value Type Description Int32 Methods CmdCastVote(GameObject, NetworkConnectionToClient) Cast vote. Declaration public void CmdCastVote(GameObject playerVoted, NetworkConnectionToClient sender = null) Parameters Type Name Description GameObject playerVoted Gameobject of player voted as killer Mirror.NetworkConnectionToClient sender Remarks Can be called several times bacause only first vote counts OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() StartVoting() Declaration public void StartVoting() Events CurrentTimeRemaining Event called everytime a second goes down on voting time. Declaration public static event Action<int> CurrentTimeRemaining Event Type Type Description Action < Int32 > Remarks Only called on server OnVotingEnded Event called when time ends for voting. Declaration public static event Action OnVotingEnded Event Type Type Description Action Remarks Only called on server OnVotingStarted Event called when starting voting. Declaration public static event Action<int> OnVotingStarted Event Type Type Description Action < Int32 > Remarks Only called on server"
  },
  "api/Global.VotingScreenLink.html": {
    "href": "api/Global.VotingScreenLink.html",
    "title": "Class VotingScreenLink | A night in the house of Hunt",
    "keywords": "Class VotingScreenLink To be used from the player Handles opening the voting screen Inheritance Object Mirror.NetworkBehaviour VotingScreenLink Namespace : Global Assembly : cs.temp.dll.dll Syntax public class VotingScreenLink : NetworkBehaviour Methods OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer()"
  },
  "api/Global.VotingScreenManager.html": {
    "href": "api/Global.VotingScreenManager.html",
    "title": "Class VotingScreenManager | A night in the house of Hunt",
    "keywords": "Class VotingScreenManager Inheritance Object Mirror.NetworkBehaviour VotingScreenManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class VotingScreenManager : NetworkBehaviour Methods OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopServer() Declaration public override void OnStopServer() Overrides Mirror.NetworkBehaviour.OnStopServer() SkipVoting() Declaration public void SkipVoting()"
  },
  "api/Global.WebGLInputTacticalIgnore.html": {
    "href": "api/Global.WebGLInputTacticalIgnore.html",
    "title": "Class WebGLInputTacticalIgnore | A night in the house of Hunt",
    "keywords": "Class WebGLInputTacticalIgnore For WebGL, on complex templates, makes sure inputs are usable in the host web template Inheritance Object WebGLInputTacticalIgnore Namespace : Global Assembly : cs.temp.dll.dll Syntax public class WebGLInputTacticalIgnore : MonoBehaviour"
  },
  "api/Global.WhilePuzzle.html": {
    "href": "api/Global.WhilePuzzle.html",
    "title": "Class WhilePuzzle | A night in the house of Hunt",
    "keywords": "Class WhilePuzzle Inheritance Object Mirror.NetworkBehaviour PuzzleBase WhilePuzzle Inherited Members PuzzleBase.TargetRunWrongFeedback(NetworkConnection) PuzzleBase.TargetRunCorrectFeedback(NetworkConnection) PuzzleBase.TargetClosePuzzle(NetworkConnection) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class WhilePuzzle : PuzzleBase Methods CheckInput(String) Declaration public void CheckInput(string input) Parameters Type Name Description String input OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient()"
  },
  "api/Global.WorldInteraction.html": {
    "href": "api/Global.WorldInteraction.html",
    "title": "Class WorldInteraction | A night in the house of Hunt",
    "keywords": "Class WorldInteraction Inheritance Object Mirror.NetworkBehaviour WorldInteraction Namespace : Global Assembly : cs.temp.dll.dll Syntax public class WorldInteraction : NetworkBehaviour Methods CmdInteractWithNearObject() Declaration public void CmdInteractWithNearObject() InteractWithEnvironment() Declaration public void InteractWithEnvironment() OnStartClient() Declaration public override void OnStartClient() Overrides Mirror.NetworkBehaviour.OnStartClient() OnStartServer() Declaration public override void OnStartServer() Overrides Mirror.NetworkBehaviour.OnStartServer() OnStopClient() Declaration public override void OnStopClient() Overrides Mirror.NetworkBehaviour.OnStopClient() Events OnObjectEndDetected Declaration public event WorldInteraction.ObjectEndDetected OnObjectEndDetected Event Type Type Description WorldInteraction.ObjectEndDetected OnObjectStartDetected Declaration public event WorldInteraction.ObjectStartDetected OnObjectStartDetected Event Type Type Description WorldInteraction.ObjectStartDetected"
  },
  "api/Global.WorldInteraction.ObjectEndDetected.html": {
    "href": "api/Global.WorldInteraction.ObjectEndDetected.html",
    "title": "Delegate WorldInteraction.ObjectEndDetected | A night in the house of Hunt",
    "keywords": "Delegate WorldInteraction.ObjectEndDetected Namespace : Global Assembly : cs.temp.dll.dll Syntax public delegate void ObjectEndDetected();"
  },
  "api/Global.WorldInteraction.ObjectStartDetected.html": {
    "href": "api/Global.WorldInteraction.ObjectStartDetected.html",
    "title": "Delegate WorldInteraction.ObjectStartDetected | A night in the house of Hunt",
    "keywords": "Delegate WorldInteraction.ObjectStartDetected Namespace : Global Assembly : cs.temp.dll.dll Syntax public delegate void ObjectStartDetected();"
  },
  "index.html": {
    "href": "index.html",
    "title": "Project-Hamilton | A night in the house of Hunt",
    "keywords": "Project-Hamilton"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | A night in the house of Hunt",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | A night in the house of Hunt",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}